/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Vista;

import Controlador.Controlador;
import javax.swing.JOptionPane;
import logicadenegocios.Banco;
import logicadenegocios.Cliente;
import Controlador.ControladorValidaciones;
import Excepciones.BlankSpaceException;
import Excepciones.CedulaFormatException;
import Excepciones.ClienteAlreadyExistsException;
import Excepciones.ClienteDoesNotExistException;
import Excepciones.CuentaDoesNotExistException;
import Excepciones.CuentaDoesNotHaveMoneyException;
import Excepciones.CuentaInactivaException;
import Excepciones.DateFormatException;
import Excepciones.MailFormatException;
import Excepciones.NumTelFormatException;
import Excepciones.PalabraTelefonoIncorrectaException;
import Excepciones.PinDoesNotMatchException;
import Excepciones.PinFormatException;
import static Vista.VistaCLI.banco;
import static Vista.VistaCLI.controlador;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.mail.MessagingException;
import logicadenegocios.CuentaBancaria;

/**
 *
 * @author sanch
 */
public class VistaGUI extends javax.swing.JFrame {
    Controlador controlador = new Controlador();
    Banco banco = new Banco();
    ControladorValidaciones validacion = new ControladorValidaciones();
    String palabraGenerada = "";
    

    /**
     * Creates new form VistaGUI
     */
    public VistaGUI() {
        initComponents();
        //prueba();
        controlador.fullerClientes(banco);
        controlador.fullerCuentas(banco);
        controlador.fullerOperaciones(banco);
        controlador.fullerAdministrador(banco);
        CuentaBancaria cuenta = banco.buscarCuenta(325967816);
        cuenta.setEstatus(true);
    }

    private void prueba(){
        controlador.registrarCliente("Sanchez", "Leiva", "Carlos", 305400520, 84784736, "candressanchez31@gmail.com", 31, 3, 2002, banco);
        Cliente Cliente1 = banco.buscarCliente(305400520);
        controlador.registrarCuenta(2000000, "abcA1#", Cliente1, banco);
            
        controlador.registrarCliente("Fernández", "Barquero", "Valeria", 402570359, 62967740, "valeria700602@gmail.com", 27, 9, 2002, banco);
        Cliente Cliente2 = banco.buscarCliente(402570359);
        controlador.registrarCuenta(1500000, "abcA2#", Cliente2, banco);
        
        controlador.registrarCliente("Acuña", "Coto", "Víctor", 117450718, 71051146, "victoracuna99@gmail.com", 9, 6, 1999, banco);
        Cliente Cliente3 = banco.buscarCliente(117450718);
        controlador.registrarCuenta(3500000, "abcA3#", Cliente3, banco);
        
        controlador.registrarCliente("Sanchez", "Pereira", "Daniel", 118000504, 83149643, "trabajodanielpereira@gmail.com", 25, 1, 2001, banco);
        Cliente Cliente4 = banco.buscarCliente(118000504);
        controlador.registrarCuenta(1550000, "abcA4#", Cliente4, banco);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        registrarClientes = new javax.swing.JFrame();
        tituloRegistrarClientes = new javax.swing.JLabel();
        etiquetaPrimerApellido = new javax.swing.JLabel();
        textoSegundoApellido = new javax.swing.JTextField();
        etiquetaSegundoApellido = new javax.swing.JLabel();
        textoPrimerApellido = new javax.swing.JTextField();
        etiquetaNombre = new javax.swing.JLabel();
        textoNombre = new javax.swing.JTextField();
        etiquetaIdentificacion = new javax.swing.JLabel();
        textoIdentificacion = new javax.swing.JTextField();
        etiquetaNumeroTelefono = new javax.swing.JLabel();
        textoNumeroTelefono = new javax.swing.JTextField();
        etiquetaCorreoElectronico = new javax.swing.JLabel();
        textoCorreoElectronico = new javax.swing.JTextField();
        etiquetaFechaNacimiento = new javax.swing.JLabel();
        etiquetaDia = new javax.swing.JLabel();
        comboBoxDias = new javax.swing.JComboBox<>();
        etiquetaMes = new javax.swing.JLabel();
        comboBoxMeses = new javax.swing.JComboBox<>();
        etiquetaAnios = new javax.swing.JLabel();
        comboBoxAnios = new javax.swing.JComboBox<>();
        registrarClienteBoton = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        crearCuenta = new javax.swing.JFrame();
        crearCuentaEtiqueta = new javax.swing.JLabel();
        textoSaldoInicial = new javax.swing.JTextField();
        etiquetaPinCliente = new javax.swing.JLabel();
        etiquetaIdentificacionCliente = new javax.swing.JLabel();
        textoIdentificacionCrearCuenta = new javax.swing.JTextField();
        etiquetaNumeroTelefono1 = new javax.swing.JLabel();
        textoPin = new javax.swing.JTextField();
        registrarCuenta = new javax.swing.JButton();
        listarClientesAscendentes = new javax.swing.JFrame();
        tituloInformacionSoloCliente = new javax.swing.JLabel();
        separadorMenu1 = new javax.swing.JSeparator();
        jScrollPane1 = new javax.swing.JScrollPane();
        listaClientesAscendente = new javax.swing.JTextArea();
        tituloClientesAscendentes1 = new javax.swing.JLabel();
        identificacionClienteBuscar = new javax.swing.JTextField();
        botonBuscarCliente = new javax.swing.JButton();
        listarCuentasDescendentes = new javax.swing.JFrame();
        tituloCuentasDescendentes = new javax.swing.JLabel();
        numeroCuentaBuscarCuenta = new javax.swing.JTextField();
        tituloInformacionSoloCuenta = new javax.swing.JLabel();
        separadorMenu2 = new javax.swing.JSeparator();
        jScrollPane2 = new javax.swing.JScrollPane();
        listarCuentasDescendentesTexto = new javax.swing.JTextArea();
        botonBuscarCuenta = new javax.swing.JButton();
        depositoColones = new javax.swing.JFrame();
        tituloDepositoColones = new javax.swing.JLabel();
        separadorMenu3 = new javax.swing.JSeparator();
        etiquetaMontoDeposito = new javax.swing.JLabel();
        textoNumeroCuentaDeposito = new javax.swing.JTextField();
        etiquetaNumeroCuenta1 = new javax.swing.JLabel();
        textoMontoDepositar = new javax.swing.JTextField();
        botonDepositar = new javax.swing.JButton();
        depositoDolares = new javax.swing.JFrame();
        tituloDepositoDolares = new javax.swing.JLabel();
        separadorMenu4 = new javax.swing.JSeparator();
        etiquetaMontoDepositoDolares = new javax.swing.JLabel();
        textoNumeroCuentaDepositoDolares = new javax.swing.JTextField();
        etiquetaNumeroCuentaDepositoDolares = new javax.swing.JLabel();
        textoMontoDepositarDolares = new javax.swing.JTextField();
        botonDepositarDolares = new javax.swing.JButton();
        consultarSaldoEnColones = new javax.swing.JFrame();
        tituloConsultarSaldoColones = new javax.swing.JLabel();
        separadorMenu5 = new javax.swing.JSeparator();
        etiquetaNumeroCuentaConsultarColones = new javax.swing.JLabel();
        numeroCuentaConsultaColones = new javax.swing.JTextField();
        etiquetaPinActualConsultarColones = new javax.swing.JLabel();
        textoPinActualColones = new javax.swing.JTextField();
        botonConsultarSaldoColones = new javax.swing.JButton();
        cambiarPin = new javax.swing.JFrame();
        tituloCambiarPin1 = new javax.swing.JLabel();
        separadorMenu6 = new javax.swing.JSeparator();
        etiquetaNumeroCuentaCambiarPin1 = new javax.swing.JLabel();
        numeroCuentaCambiarPin = new javax.swing.JTextField();
        etiquetaPinActual1 = new javax.swing.JLabel();
        textoPinActual = new javax.swing.JTextField();
        etiquetaNuevoPin1 = new javax.swing.JLabel();
        textoNuevoPin = new javax.swing.JTextField();
        botonCambiaPin = new javax.swing.JButton();
        consultarSaldoDolares = new javax.swing.JFrame();
        tituloConsultarSaldoDolares = new javax.swing.JLabel();
        separadorMenu7 = new javax.swing.JSeparator();
        etiquetaNumeroCuentaConsultarSaldoDolares = new javax.swing.JLabel();
        numeroCuentaConsultaDolares = new javax.swing.JTextField();
        etiquetaPinActualDolares = new javax.swing.JLabel();
        textoPinActualDolares = new javax.swing.JTextField();
        botonConsultarSaldoDolares = new javax.swing.JButton();
        consultarEstadoCuentaColones = new javax.swing.JFrame();
        tituloConsultarEstadoCuenta = new javax.swing.JLabel();
        separadorMenu8 = new javax.swing.JSeparator();
        etiquetaNumeroCuentaEstadoCuenta = new javax.swing.JLabel();
        numeroCuentaEstadoCuentaColones = new javax.swing.JTextField();
        etiquetaPinActualEstadoCuentaColones = new javax.swing.JLabel();
        numeroPinEstadoCuentaColones = new javax.swing.JTextField();
        botonConsultarEstadoCuentaColones = new javax.swing.JButton();
        consultarEstadoCuentaDolares = new javax.swing.JFrame();
        tituloConsultarEstadoCuentaDolares = new javax.swing.JLabel();
        separadorMenu9 = new javax.swing.JSeparator();
        etiquetaNumeroCuentaEstadoCuentaDolares = new javax.swing.JLabel();
        numeroCuentaEstadoCuentaDolares = new javax.swing.JTextField();
        etiquetaPinActualEstadoCuentaDolares = new javax.swing.JLabel();
        numeroPinEstadoCuentaDolares = new javax.swing.JTextField();
        botonCuentaEstadoDolares = new javax.swing.JButton();
        consultarEstatusCuenta = new javax.swing.JFrame();
        tituloConsultarEstatus = new javax.swing.JLabel();
        separadorMenu10 = new javax.swing.JSeparator();
        etiquetaNumeroCuentaEstatus = new javax.swing.JLabel();
        numeroCuentaEstatus = new javax.swing.JTextField();
        botonConsultarEstatus = new javax.swing.JButton();
        consultarGananciasBancoCuenta = new javax.swing.JFrame();
        tituloConsultarGanancias = new javax.swing.JLabel();
        separadorMenu11 = new javax.swing.JSeparator();
        etiquetaNumeroCuentaGanancia = new javax.swing.JLabel();
        numeroCuentaGanancia = new javax.swing.JTextField();
        botonConsultarGanancia = new javax.swing.JButton();
        retiroColones = new javax.swing.JFrame();
        etiquetaNumeroCuentaRetiro = new javax.swing.JLabel();
        textoNumeroCuentaRetiro = new javax.swing.JTextField();
        etiquetaSaldoRetiroColones = new javax.swing.JLabel();
        textoPinColonesRetiro = new javax.swing.JTextField();
        botonRealizarRetiroColones = new javax.swing.JButton();
        retiroColonesEtiqueta = new javax.swing.JLabel();
        textoSaldoRetiro = new javax.swing.JTextField();
        etiquetaPinColones = new javax.swing.JLabel();
        etiquetaPalabraColones = new javax.swing.JLabel();
        textoPalabraColones = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        botonGenerarPalabraRetiro = new javax.swing.JButton();
        retiroDolares = new javax.swing.JFrame();
        etiquetaNumeroCuentaRetiroDolar = new javax.swing.JLabel();
        textoNumeroCuentaRetiroDolar = new javax.swing.JTextField();
        etiquetaSaldoRetiroColones1 = new javax.swing.JLabel();
        textoPinColonesRetiroDolar = new javax.swing.JTextField();
        botonRealizarRetiroDolares = new javax.swing.JButton();
        retiroColonesEtiqueta1 = new javax.swing.JLabel();
        textoSaldoRetiroDolares = new javax.swing.JTextField();
        etiquetaPinColonesDolar = new javax.swing.JLabel();
        etiquetaPalabraDolares = new javax.swing.JLabel();
        textoPalabraDolares = new javax.swing.JTextField();
        jSeparator2 = new javax.swing.JSeparator();
        botonGenerarPalabraRetiroDolares = new javax.swing.JButton();
        transferenciaLocal = new javax.swing.JFrame();
        jSeparator3 = new javax.swing.JSeparator();
        transferenciaEtiqueta = new javax.swing.JLabel();
        etiquetaNumeroCuentaOrigen = new javax.swing.JLabel();
        numeroCuentaOrigen = new javax.swing.JTextField();
        etiquetaPinOrigen = new javax.swing.JLabel();
        pinOrigen = new javax.swing.JTextField();
        etiquetaCuentaDestino = new javax.swing.JLabel();
        numeroCuentaDestino = new javax.swing.JTextField();
        etiquetaSaldo = new javax.swing.JLabel();
        saldoTransferencia = new javax.swing.JTextField();
        etiquetaPalabra = new javax.swing.JLabel();
        palabraTransferencia = new javax.swing.JTextField();
        palabraTransferenciaBoton = new javax.swing.JButton();
        realizarTransferenciaBoton = new javax.swing.JButton();
        tituloMenu = new javax.swing.JLabel();
        victorMenu = new javax.swing.JLabel();
        separadorMenu = new javax.swing.JSeparator();
        BotonVistaClientes = new javax.swing.JToggleButton();
        BotonVistaCuentas = new javax.swing.JToggleButton();
        botonConsultarCompraDolar = new javax.swing.JToggleButton();
        botonConsultarCuentaDolar = new javax.swing.JToggleButton();
        botonListarClientesAscendente = new javax.swing.JButton();
        botonListarCuentasDescendentes = new javax.swing.JButton();
        BotonDepositoColones = new javax.swing.JToggleButton();
        BotonDepositoDolares = new javax.swing.JToggleButton();
        botonCambiarPin = new javax.swing.JButton();
        consultarSaldoActualColones = new javax.swing.JButton();
        consultarSaldoActualDolares = new javax.swing.JButton();
        subtituloMenu1 = new javax.swing.JLabel();
        valeMenu = new javax.swing.JLabel();
        carlosMenu = new javax.swing.JLabel();
        botonEstadoCuentaColones = new javax.swing.JButton();
        botonConsultarEstadoCuentaDolares = new javax.swing.JButton();
        botonEstatusCuenta = new javax.swing.JButton();
        botonConsultarGananciasGenerales = new javax.swing.JButton();
        botonGananciasBancoCuenta = new javax.swing.JButton();
        botonRetiroColones = new javax.swing.JButton();
        botonRetiroDolares = new javax.swing.JButton();
        botonRealizarTransferencia = new javax.swing.JButton();
        botonSalir = new javax.swing.JButton();

        registrarClientes.setSize(new java.awt.Dimension(0, 0));

        tituloRegistrarClientes.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        tituloRegistrarClientes.setText("Registrar Clientes");

        etiquetaPrimerApellido.setText("Primer apellido");

        etiquetaSegundoApellido.setText("Segundo apellido");

        etiquetaNombre.setText("Nombre");

        etiquetaIdentificacion.setText("Identificacion");

        textoIdentificacion.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textoIdentificacionKeyTyped(evt);
            }
        });

        etiquetaNumeroTelefono.setText("Número Teléfono");

        textoNumeroTelefono.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textoNumeroTelefonoKeyTyped(evt);
            }
        });

        etiquetaCorreoElectronico.setText("Correo Electrónico");

        etiquetaFechaNacimiento.setText("Fecha de nacimiento");

        etiquetaDia.setText("Dia");

        comboBoxDias.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));
        comboBoxDias.setToolTipText("");
        comboBoxDias.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBoxDiasActionPerformed(evt);
            }
        });

        etiquetaMes.setText("Mes");

        comboBoxMeses.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12" }));

        etiquetaAnios.setText("Año");

        comboBoxAnios.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "2022", "2021", "2020", "2019", "2018", "2017", "2016", "2015", "2014", "2013", "2012", "2011", "2010", "2009", "2008", "2007", "2006", "2005", "2004", "2003", "2002", "2001", "2000", "1999", "1998", "1997", "1996", "1995", "1994", "1993", "1992", "1991", "1990", "1989", "1988", "1987", "1986", "1985", "1984", "1983", "1982", "1981", "1980", "1979", "1978", "1977", "1976", "1975", "1974", "1973", "1972", "1971", "1970", "1969", "1968", "1967", "1966", "1965", "1964", "1963", "1962", "1961", "1960", "1959", "1958", "1957", "1956", "1955", "1954", "1953", "1952", "1951", "1950", "1949", "1948", "1947", "1946", "1945", "1944", "1943", "1942", "1941", "1940", "1939", "1938", "1937", "1936", "1935", "1934", "1933", "1932", "1931", "1930", "1929", "1928", "1927", "1926", "1925", "1924", "1923", "1922", "1921", "1920" }));
        comboBoxAnios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBoxAniosActionPerformed(evt);
            }
        });

        registrarClienteBoton.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        registrarClienteBoton.setText("Registrar Cliente");
        registrarClienteBoton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registrarClienteBotonActionPerformed(evt);
            }
        });

        jButton1.setText("Limpiar Campos");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout registrarClientesLayout = new javax.swing.GroupLayout(registrarClientes.getContentPane());
        registrarClientes.getContentPane().setLayout(registrarClientesLayout);
        registrarClientesLayout.setHorizontalGroup(
            registrarClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(registrarClientesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(registrarClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(registrarClientesLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(registrarClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(registrarClientesLayout.createSequentialGroup()
                                .addGroup(registrarClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(etiquetaMes)
                                    .addComponent(comboBoxMeses, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(31, 31, 31)
                                .addGroup(registrarClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(etiquetaAnios)
                                    .addComponent(comboBoxAnios, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(registrarClientesLayout.createSequentialGroup()
                                .addGroup(registrarClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(etiquetaPrimerApellido)
                                    .addComponent(etiquetaSegundoApellido)
                                    .addComponent(textoPrimerApellido, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(textoSegundoApellido, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(etiquetaNombre)
                                    .addComponent(textoNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(etiquetaIdentificacion)
                                    .addComponent(textoIdentificacion, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(etiquetaNumeroTelefono)
                                    .addComponent(textoNumeroTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(etiquetaCorreoElectronico)
                                    .addComponent(textoCorreoElectronico, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(74, 74, 74)))
                        .addGap(42, 42, 42))
                    .addGroup(registrarClientesLayout.createSequentialGroup()
                        .addComponent(tituloRegistrarClientes)
                        .addGap(86, 234, Short.MAX_VALUE))
                    .addGroup(registrarClientesLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(registrarClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(etiquetaDia)
                            .addComponent(comboBoxDias, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(etiquetaFechaNacimiento))
                        .addGap(0, 298, Short.MAX_VALUE))))
            .addGroup(registrarClientesLayout.createSequentialGroup()
                .addGroup(registrarClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(registrarClientesLayout.createSequentialGroup()
                        .addGap(118, 118, 118)
                        .addComponent(registrarClienteBoton))
                    .addGroup(registrarClientesLayout.createSequentialGroup()
                        .addGap(142, 142, 142)
                        .addComponent(jButton1)))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        registrarClientesLayout.setVerticalGroup(
            registrarClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(registrarClientesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tituloRegistrarClientes)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(etiquetaPrimerApellido)
                .addGap(1, 1, 1)
                .addComponent(textoPrimerApellido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(etiquetaSegundoApellido)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(textoSegundoApellido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(etiquetaNombre)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(textoNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(etiquetaIdentificacion)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(textoIdentificacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(etiquetaNumeroTelefono)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(textoNumeroTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(etiquetaCorreoElectronico)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(textoCorreoElectronico, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(etiquetaFechaNacimiento)
                .addGap(12, 12, 12)
                .addGroup(registrarClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(etiquetaDia)
                    .addComponent(etiquetaMes)
                    .addComponent(etiquetaAnios))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(registrarClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboBoxDias, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comboBoxMeses, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comboBoxAnios, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(registrarClienteBoton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1)
                .addContainerGap(24, Short.MAX_VALUE))
        );

        crearCuenta.setResizable(false);

        crearCuentaEtiqueta.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        crearCuentaEtiqueta.setText("Crear cuenta");

        textoSaldoInicial.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textoSaldoInicialKeyTyped(evt);
            }
        });

        etiquetaPinCliente.setText("Pin");

        etiquetaIdentificacionCliente.setText("Identificacion");

        textoIdentificacionCrearCuenta.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textoIdentificacionCrearCuentaKeyTyped(evt);
            }
        });

        etiquetaNumeroTelefono1.setText("Saldo");

        textoPin.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textoPinKeyTyped(evt);
            }
        });

        registrarCuenta.setText("Registrar Cuenta");
        registrarCuenta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registrarCuentaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout crearCuentaLayout = new javax.swing.GroupLayout(crearCuenta.getContentPane());
        crearCuenta.getContentPane().setLayout(crearCuentaLayout);
        crearCuentaLayout.setHorizontalGroup(
            crearCuentaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(crearCuentaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(crearCuentaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(textoPin)
                    .addComponent(crearCuentaEtiqueta, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(etiquetaIdentificacionCliente, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(textoIdentificacionCrearCuenta, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                    .addComponent(etiquetaNumeroTelefono1, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(textoSaldoInicial, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                    .addComponent(etiquetaPinCliente, javax.swing.GroupLayout.Alignment.LEADING))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, crearCuentaLayout.createSequentialGroup()
                .addContainerGap(52, Short.MAX_VALUE)
                .addComponent(registrarCuenta)
                .addGap(43, 43, 43))
        );
        crearCuentaLayout.setVerticalGroup(
            crearCuentaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(crearCuentaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(crearCuentaEtiqueta)
                .addGap(18, 18, 18)
                .addComponent(etiquetaIdentificacionCliente)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(textoIdentificacionCrearCuenta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(etiquetaNumeroTelefono1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(textoSaldoInicial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(etiquetaPinCliente)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(textoPin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(registrarCuenta)
                .addContainerGap(36, Short.MAX_VALUE))
        );

        listarClientesAscendentes.setResizable(false);

        tituloInformacionSoloCliente.setText("Mostrar información específica de un cliente por identificacion:");

        listaClientesAscendente.setEditable(false);
        listaClientesAscendente.setColumns(20);
        listaClientesAscendente.setRows(5);
        jScrollPane1.setViewportView(listaClientesAscendente);

        tituloClientesAscendentes1.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        tituloClientesAscendentes1.setText("Clientes listados por apellido ascendente");

        identificacionClienteBuscar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                identificacionClienteBuscarKeyTyped(evt);
            }
        });

        botonBuscarCliente.setText("Buscar");
        botonBuscarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonBuscarClienteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout listarClientesAscendentesLayout = new javax.swing.GroupLayout(listarClientesAscendentes.getContentPane());
        listarClientesAscendentes.getContentPane().setLayout(listarClientesAscendentesLayout);
        listarClientesAscendentesLayout.setHorizontalGroup(
            listarClientesAscendentesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(listarClientesAscendentesLayout.createSequentialGroup()
                .addGroup(listarClientesAscendentesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(listarClientesAscendentesLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(separadorMenu1))
                    .addGroup(listarClientesAscendentesLayout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addGroup(listarClientesAscendentesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(listarClientesAscendentesLayout.createSequentialGroup()
                                .addComponent(tituloInformacionSoloCliente)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(identificacionClienteBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(botonBuscarCliente))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 600, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 32, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(listarClientesAscendentesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tituloClientesAscendentes1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        listarClientesAscendentesLayout.setVerticalGroup(
            listarClientesAscendentesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(listarClientesAscendentesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tituloClientesAscendentes1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(separadorMenu1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(listarClientesAscendentesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tituloInformacionSoloCliente)
                    .addComponent(identificacionClienteBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(botonBuscarCliente))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        listarCuentasDescendentes.setResizable(false);

        tituloCuentasDescendentes.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        tituloCuentasDescendentes.setText("Cuentas descendentes");

        numeroCuentaBuscarCuenta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                numeroCuentaBuscarCuentaActionPerformed(evt);
            }
        });
        numeroCuentaBuscarCuenta.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                numeroCuentaBuscarCuentaKeyTyped(evt);
            }
        });

        tituloInformacionSoloCuenta.setText("Mostrar información específica de una cuenta por numero de cuenta:");

        listarCuentasDescendentesTexto.setEditable(false);
        listarCuentasDescendentesTexto.setColumns(20);
        listarCuentasDescendentesTexto.setRows(5);
        jScrollPane2.setViewportView(listarCuentasDescendentesTexto);

        botonBuscarCuenta.setText("Buscar");
        botonBuscarCuenta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonBuscarCuentaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout listarCuentasDescendentesLayout = new javax.swing.GroupLayout(listarCuentasDescendentes.getContentPane());
        listarCuentasDescendentes.getContentPane().setLayout(listarCuentasDescendentesLayout);
        listarCuentasDescendentesLayout.setHorizontalGroup(
            listarCuentasDescendentesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(listarCuentasDescendentesLayout.createSequentialGroup()
                .addGroup(listarCuentasDescendentesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(listarCuentasDescendentesLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(tituloInformacionSoloCuenta)
                        .addGap(18, 18, 18)
                        .addComponent(numeroCuentaBuscarCuenta, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(botonBuscarCuenta))
                    .addGroup(listarCuentasDescendentesLayout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 626, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(31, Short.MAX_VALUE))
            .addGroup(listarCuentasDescendentesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(listarCuentasDescendentesLayout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(listarCuentasDescendentesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(listarCuentasDescendentesLayout.createSequentialGroup()
                            .addComponent(tituloCuentasDescendentes)
                            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(listarCuentasDescendentesLayout.createSequentialGroup()
                            .addComponent(separadorMenu2)
                            .addContainerGap()))))
        );
        listarCuentasDescendentesLayout.setVerticalGroup(
            listarCuentasDescendentesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(listarCuentasDescendentesLayout.createSequentialGroup()
                .addContainerGap(65, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 243, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(listarCuentasDescendentesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botonBuscarCuenta)
                    .addComponent(numeroCuentaBuscarCuenta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tituloInformacionSoloCuenta))
                .addGap(50, 50, 50))
            .addGroup(listarCuentasDescendentesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(listarCuentasDescendentesLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(tituloCuentasDescendentes)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(separadorMenu2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(344, Short.MAX_VALUE)))
        );

        depositoColones.setResizable(false);

        tituloDepositoColones.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        tituloDepositoColones.setText("Depósito en colones");

        etiquetaMontoDeposito.setText("Monto a depositar");

        textoNumeroCuentaDeposito.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textoNumeroCuentaDepositoKeyTyped(evt);
            }
        });

        etiquetaNumeroCuenta1.setText("Número de cuenta");

        textoMontoDepositar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textoMontoDepositarKeyTyped(evt);
            }
        });

        botonDepositar.setText("Depositar");
        botonDepositar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonDepositarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout depositoColonesLayout = new javax.swing.GroupLayout(depositoColones.getContentPane());
        depositoColones.getContentPane().setLayout(depositoColonesLayout);
        depositoColonesLayout.setHorizontalGroup(
            depositoColonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(depositoColonesLayout.createSequentialGroup()
                .addGroup(depositoColonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(depositoColonesLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(depositoColonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(separadorMenu3)
                            .addGroup(depositoColonesLayout.createSequentialGroup()
                                .addComponent(tituloDepositoColones)
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(depositoColonesLayout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addGroup(depositoColonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(textoMontoDepositar, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(etiquetaNumeroCuenta1)
                            .addComponent(etiquetaMontoDeposito)
                            .addComponent(textoNumeroCuentaDeposito, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 34, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(depositoColonesLayout.createSequentialGroup()
                .addGap(118, 118, 118)
                .addComponent(botonDepositar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        depositoColonesLayout.setVerticalGroup(
            depositoColonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(depositoColonesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tituloDepositoColones)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(separadorMenu3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(etiquetaNumeroCuenta1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(textoNumeroCuentaDeposito, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(etiquetaMontoDeposito)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(textoMontoDepositar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(botonDepositar)
                .addContainerGap(16, Short.MAX_VALUE))
        );

        depositoDolares.setResizable(false);

        tituloDepositoDolares.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        tituloDepositoDolares.setText("Depósito en dólares");

        etiquetaMontoDepositoDolares.setText("Monto a depositar en dólares");

        textoNumeroCuentaDepositoDolares.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textoNumeroCuentaDepositoDolaresKeyTyped(evt);
            }
        });

        etiquetaNumeroCuentaDepositoDolares.setText("Número de cuenta");

        textoMontoDepositarDolares.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textoMontoDepositarDolaresKeyTyped(evt);
            }
        });

        botonDepositarDolares.setText("Depositar");
        botonDepositarDolares.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonDepositarDolaresActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout depositoDolaresLayout = new javax.swing.GroupLayout(depositoDolares.getContentPane());
        depositoDolares.getContentPane().setLayout(depositoDolaresLayout);
        depositoDolaresLayout.setHorizontalGroup(
            depositoDolaresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(depositoDolaresLayout.createSequentialGroup()
                .addGroup(depositoDolaresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(depositoDolaresLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(depositoDolaresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(separadorMenu4)
                            .addGroup(depositoDolaresLayout.createSequentialGroup()
                                .addComponent(tituloDepositoDolares)
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(depositoDolaresLayout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addGroup(depositoDolaresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(textoMontoDepositarDolares, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(etiquetaNumeroCuentaDepositoDolares)
                            .addComponent(etiquetaMontoDepositoDolares)
                            .addComponent(textoNumeroCuentaDepositoDolares, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 34, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(depositoDolaresLayout.createSequentialGroup()
                .addGap(118, 118, 118)
                .addComponent(botonDepositarDolares)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        depositoDolaresLayout.setVerticalGroup(
            depositoDolaresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(depositoDolaresLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tituloDepositoDolares)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(separadorMenu4, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(etiquetaNumeroCuentaDepositoDolares)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(textoNumeroCuentaDepositoDolares, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(etiquetaMontoDepositoDolares)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(textoMontoDepositarDolares, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(botonDepositarDolares)
                .addContainerGap(16, Short.MAX_VALUE))
        );

        consultarSaldoEnColones.setResizable(false);

        tituloConsultarSaldoColones.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        tituloConsultarSaldoColones.setText("Consultar saldo en colones");

        etiquetaNumeroCuentaConsultarColones.setText("Numero de cuenta");

        numeroCuentaConsultaColones.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                numeroCuentaConsultaColonesKeyTyped(evt);
            }
        });

        etiquetaPinActualConsultarColones.setText("Pin");

        textoPinActualColones.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textoPinActualColonesKeyTyped(evt);
            }
        });

        botonConsultarSaldoColones.setText("Consultar saldo en colones");
        botonConsultarSaldoColones.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonConsultarSaldoColonesActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout consultarSaldoEnColonesLayout = new javax.swing.GroupLayout(consultarSaldoEnColones.getContentPane());
        consultarSaldoEnColones.getContentPane().setLayout(consultarSaldoEnColonesLayout);
        consultarSaldoEnColonesLayout.setHorizontalGroup(
            consultarSaldoEnColonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(consultarSaldoEnColonesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(consultarSaldoEnColonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(consultarSaldoEnColonesLayout.createSequentialGroup()
                        .addComponent(separadorMenu5)
                        .addGap(36, 36, 36))
                    .addGroup(consultarSaldoEnColonesLayout.createSequentialGroup()
                        .addGroup(consultarSaldoEnColonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tituloConsultarSaldoColones, javax.swing.GroupLayout.PREFERRED_SIZE, 304, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(consultarSaldoEnColonesLayout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addGroup(consultarSaldoEnColonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(numeroCuentaConsultaColones, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(etiquetaNumeroCuentaConsultarColones)
                                    .addComponent(etiquetaPinActualConsultarColones)
                                    .addComponent(textoPinActualColones, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addContainerGap(36, Short.MAX_VALUE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, consultarSaldoEnColonesLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(botonConsultarSaldoColones)
                .addGap(73, 73, 73))
        );
        consultarSaldoEnColonesLayout.setVerticalGroup(
            consultarSaldoEnColonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(consultarSaldoEnColonesLayout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(tituloConsultarSaldoColones)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(separadorMenu5, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(etiquetaNumeroCuentaConsultarColones)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(numeroCuentaConsultaColones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(etiquetaPinActualConsultarColones)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(textoPinActualColones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(botonConsultarSaldoColones)
                .addContainerGap(12, Short.MAX_VALUE))
        );

        cambiarPin.setResizable(false);

        tituloCambiarPin1.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        tituloCambiarPin1.setText("Cambiar Pin");

        etiquetaNumeroCuentaCambiarPin1.setText("Numero de cuenta");

        numeroCuentaCambiarPin.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                numeroCuentaCambiarPinKeyTyped(evt);
            }
        });

        etiquetaPinActual1.setText("Pin actual");

        textoPinActual.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textoPinActualKeyTyped(evt);
            }
        });

        etiquetaNuevoPin1.setText("Nuevo pin");

        textoNuevoPin.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textoNuevoPinKeyTyped(evt);
            }
        });

        botonCambiaPin.setText("Cambiar Pin");
        botonCambiaPin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonCambiaPinActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout cambiarPinLayout = new javax.swing.GroupLayout(cambiarPin.getContentPane());
        cambiarPin.getContentPane().setLayout(cambiarPinLayout);
        cambiarPinLayout.setHorizontalGroup(
            cambiarPinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cambiarPinLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(cambiarPinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tituloCambiarPin1)
                    .addComponent(etiquetaNumeroCuentaCambiarPin1)
                    .addComponent(numeroCuentaCambiarPin, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(etiquetaPinActual1)
                    .addComponent(textoPinActual, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(etiquetaNuevoPin1)
                    .addComponent(textoNuevoPin, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(separadorMenu6, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addGroup(cambiarPinLayout.createSequentialGroup()
                .addGap(86, 86, 86)
                .addComponent(botonCambiaPin)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        cambiarPinLayout.setVerticalGroup(
            cambiarPinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cambiarPinLayout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(tituloCambiarPin1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(separadorMenu6, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(etiquetaNumeroCuentaCambiarPin1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(numeroCuentaCambiarPin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(etiquetaPinActual1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(textoPinActual, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(etiquetaNuevoPin1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(textoNuevoPin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(botonCambiaPin)
                .addContainerGap(21, Short.MAX_VALUE))
        );

        consultarSaldoDolares.setResizable(false);

        tituloConsultarSaldoDolares.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        tituloConsultarSaldoDolares.setText("Consultar saldo en dolares");

        etiquetaNumeroCuentaConsultarSaldoDolares.setText("Numero de cuenta");

        numeroCuentaConsultaDolares.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                numeroCuentaConsultaDolaresKeyTyped(evt);
            }
        });

        etiquetaPinActualDolares.setText("Pin");

        textoPinActualDolares.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textoPinActualDolaresKeyTyped(evt);
            }
        });

        botonConsultarSaldoDolares.setText("Consultar saldo en dolares");
        botonConsultarSaldoDolares.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonConsultarSaldoDolaresActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout consultarSaldoDolaresLayout = new javax.swing.GroupLayout(consultarSaldoDolares.getContentPane());
        consultarSaldoDolares.getContentPane().setLayout(consultarSaldoDolaresLayout);
        consultarSaldoDolaresLayout.setHorizontalGroup(
            consultarSaldoDolaresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(consultarSaldoDolaresLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(consultarSaldoDolaresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(consultarSaldoDolaresLayout.createSequentialGroup()
                        .addComponent(separadorMenu7)
                        .addGap(36, 36, 36))
                    .addGroup(consultarSaldoDolaresLayout.createSequentialGroup()
                        .addGroup(consultarSaldoDolaresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tituloConsultarSaldoDolares, javax.swing.GroupLayout.PREFERRED_SIZE, 304, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(consultarSaldoDolaresLayout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addGroup(consultarSaldoDolaresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(numeroCuentaConsultaDolares, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(etiquetaNumeroCuentaConsultarSaldoDolares)
                                    .addComponent(etiquetaPinActualDolares)
                                    .addComponent(textoPinActualDolares, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addContainerGap(36, Short.MAX_VALUE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, consultarSaldoDolaresLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(botonConsultarSaldoDolares)
                .addGap(73, 73, 73))
        );
        consultarSaldoDolaresLayout.setVerticalGroup(
            consultarSaldoDolaresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(consultarSaldoDolaresLayout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(tituloConsultarSaldoDolares)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(separadorMenu7, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(etiquetaNumeroCuentaConsultarSaldoDolares)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(numeroCuentaConsultaDolares, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(etiquetaPinActualDolares)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(textoPinActualDolares, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(botonConsultarSaldoDolares)
                .addContainerGap(12, Short.MAX_VALUE))
        );

        consultarEstadoCuentaColones.setResizable(false);

        tituloConsultarEstadoCuenta.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        tituloConsultarEstadoCuenta.setText("Consultar estado de cuenta en colones");

        etiquetaNumeroCuentaEstadoCuenta.setText("Numero de cuenta");

        numeroCuentaEstadoCuentaColones.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                numeroCuentaEstadoCuentaColonesActionPerformed(evt);
            }
        });
        numeroCuentaEstadoCuentaColones.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                numeroCuentaEstadoCuentaColonesKeyTyped(evt);
            }
        });

        etiquetaPinActualEstadoCuentaColones.setText("Pin");

        numeroPinEstadoCuentaColones.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                numeroPinEstadoCuentaColonesKeyTyped(evt);
            }
        });

        botonConsultarEstadoCuentaColones.setText("Consultar estado de cuenta en colones");
        botonConsultarEstadoCuentaColones.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonConsultarEstadoCuentaColonesActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout consultarEstadoCuentaColonesLayout = new javax.swing.GroupLayout(consultarEstadoCuentaColones.getContentPane());
        consultarEstadoCuentaColones.getContentPane().setLayout(consultarEstadoCuentaColonesLayout);
        consultarEstadoCuentaColonesLayout.setHorizontalGroup(
            consultarEstadoCuentaColonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(consultarEstadoCuentaColonesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(consultarEstadoCuentaColonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(consultarEstadoCuentaColonesLayout.createSequentialGroup()
                        .addGroup(consultarEstadoCuentaColonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(consultarEstadoCuentaColonesLayout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addGroup(consultarEstadoCuentaColonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(numeroCuentaEstadoCuentaColones, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(etiquetaNumeroCuentaEstadoCuenta)
                                    .addComponent(etiquetaPinActualEstadoCuentaColones)
                                    .addComponent(numeroPinEstadoCuentaColones, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(tituloConsultarEstadoCuenta, javax.swing.GroupLayout.PREFERRED_SIZE, 425, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(77, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, consultarEstadoCuentaColonesLayout.createSequentialGroup()
                        .addComponent(separadorMenu8)
                        .addGap(36, 36, 36))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, consultarEstadoCuentaColonesLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(botonConsultarEstadoCuentaColones)
                .addContainerGap())
        );
        consultarEstadoCuentaColonesLayout.setVerticalGroup(
            consultarEstadoCuentaColonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(consultarEstadoCuentaColonesLayout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(tituloConsultarEstadoCuenta)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(separadorMenu8, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(etiquetaNumeroCuentaEstadoCuenta)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(numeroCuentaEstadoCuentaColones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(etiquetaPinActualEstadoCuentaColones)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(numeroPinEstadoCuentaColones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(botonConsultarEstadoCuentaColones)
                .addContainerGap(12, Short.MAX_VALUE))
        );

        consultarEstadoCuentaDolares.setResizable(false);

        tituloConsultarEstadoCuentaDolares.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        tituloConsultarEstadoCuentaDolares.setText("Consultar estado de cuenta en dólares");

        etiquetaNumeroCuentaEstadoCuentaDolares.setText("Numero de cuenta");

        numeroCuentaEstadoCuentaDolares.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                numeroCuentaEstadoCuentaDolaresActionPerformed(evt);
            }
        });
        numeroCuentaEstadoCuentaDolares.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                numeroCuentaEstadoCuentaDolaresKeyTyped(evt);
            }
        });

        etiquetaPinActualEstadoCuentaDolares.setText("Pin");

        numeroPinEstadoCuentaDolares.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                numeroPinEstadoCuentaDolaresKeyTyped(evt);
            }
        });

        botonCuentaEstadoDolares.setText("Consultar estado de cuenta en dolares");
        botonCuentaEstadoDolares.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonCuentaEstadoDolaresActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout consultarEstadoCuentaDolaresLayout = new javax.swing.GroupLayout(consultarEstadoCuentaDolares.getContentPane());
        consultarEstadoCuentaDolares.getContentPane().setLayout(consultarEstadoCuentaDolaresLayout);
        consultarEstadoCuentaDolaresLayout.setHorizontalGroup(
            consultarEstadoCuentaDolaresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(consultarEstadoCuentaDolaresLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(consultarEstadoCuentaDolaresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(consultarEstadoCuentaDolaresLayout.createSequentialGroup()
                        .addGroup(consultarEstadoCuentaDolaresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(consultarEstadoCuentaDolaresLayout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addGroup(consultarEstadoCuentaDolaresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(numeroCuentaEstadoCuentaDolares, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(etiquetaNumeroCuentaEstadoCuentaDolares)
                                    .addComponent(etiquetaPinActualEstadoCuentaDolares)
                                    .addComponent(numeroPinEstadoCuentaDolares, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(tituloConsultarEstadoCuentaDolares, javax.swing.GroupLayout.PREFERRED_SIZE, 425, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(77, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, consultarEstadoCuentaDolaresLayout.createSequentialGroup()
                        .addComponent(separadorMenu9)
                        .addGap(36, 36, 36))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, consultarEstadoCuentaDolaresLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(botonCuentaEstadoDolares)
                .addContainerGap())
        );
        consultarEstadoCuentaDolaresLayout.setVerticalGroup(
            consultarEstadoCuentaDolaresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(consultarEstadoCuentaDolaresLayout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(tituloConsultarEstadoCuentaDolares)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(separadorMenu9, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(etiquetaNumeroCuentaEstadoCuentaDolares)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(numeroCuentaEstadoCuentaDolares, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(etiquetaPinActualEstadoCuentaDolares)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(numeroPinEstadoCuentaDolares, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(botonCuentaEstadoDolares)
                .addContainerGap(12, Short.MAX_VALUE))
        );

        consultarEstatusCuenta.setResizable(false);

        tituloConsultarEstatus.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        tituloConsultarEstatus.setText("Consultar estatus de la cuenta");

        etiquetaNumeroCuentaEstatus.setText("Numero de cuenta");

        numeroCuentaEstatus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                numeroCuentaEstatusActionPerformed(evt);
            }
        });
        numeroCuentaEstatus.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                numeroCuentaEstatusKeyTyped(evt);
            }
        });

        botonConsultarEstatus.setText("Consultar Estatus");
        botonConsultarEstatus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonConsultarEstatusActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout consultarEstatusCuentaLayout = new javax.swing.GroupLayout(consultarEstatusCuenta.getContentPane());
        consultarEstatusCuenta.getContentPane().setLayout(consultarEstatusCuentaLayout);
        consultarEstatusCuentaLayout.setHorizontalGroup(
            consultarEstatusCuentaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(consultarEstatusCuentaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(consultarEstatusCuentaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(consultarEstatusCuentaLayout.createSequentialGroup()
                        .addComponent(separadorMenu10)
                        .addContainerGap())
                    .addGroup(consultarEstatusCuentaLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(consultarEstatusCuentaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(numeroCuentaEstatus, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(etiquetaNumeroCuentaEstatus))
                        .addContainerGap(118, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, consultarEstatusCuentaLayout.createSequentialGroup()
                        .addComponent(tituloConsultarEstatus, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(36, 36, 36))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, consultarEstatusCuentaLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(botonConsultarEstatus)
                .addContainerGap())
        );
        consultarEstatusCuentaLayout.setVerticalGroup(
            consultarEstatusCuentaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(consultarEstatusCuentaLayout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(tituloConsultarEstatus)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(separadorMenu10, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(etiquetaNumeroCuentaEstatus)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(numeroCuentaEstatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(botonConsultarEstatus)
                .addContainerGap(20, Short.MAX_VALUE))
        );

        consultarGananciasBancoCuenta.setResizable(false);

        tituloConsultarGanancias.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        tituloConsultarGanancias.setText("Consultar ganancias del banco por cuenta");

        etiquetaNumeroCuentaGanancia.setText("Numero de cuenta");

        numeroCuentaGanancia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                numeroCuentaGananciaActionPerformed(evt);
            }
        });
        numeroCuentaGanancia.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                numeroCuentaGananciaKeyTyped(evt);
            }
        });

        botonConsultarGanancia.setText("Consultar ganancias");
        botonConsultarGanancia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonConsultarGananciaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout consultarGananciasBancoCuentaLayout = new javax.swing.GroupLayout(consultarGananciasBancoCuenta.getContentPane());
        consultarGananciasBancoCuenta.getContentPane().setLayout(consultarGananciasBancoCuentaLayout);
        consultarGananciasBancoCuentaLayout.setHorizontalGroup(
            consultarGananciasBancoCuentaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(consultarGananciasBancoCuentaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(consultarGananciasBancoCuentaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(consultarGananciasBancoCuentaLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(consultarGananciasBancoCuentaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(numeroCuentaGanancia, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(etiquetaNumeroCuentaGanancia))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, consultarGananciasBancoCuentaLayout.createSequentialGroup()
                        .addGroup(consultarGananciasBancoCuentaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(separadorMenu11)
                            .addComponent(tituloConsultarGanancias, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(36, 36, 36))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, consultarGananciasBancoCuentaLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(botonConsultarGanancia)
                .addGap(77, 77, 77))
        );
        consultarGananciasBancoCuentaLayout.setVerticalGroup(
            consultarGananciasBancoCuentaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(consultarGananciasBancoCuentaLayout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(tituloConsultarGanancias)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(separadorMenu11, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(etiquetaNumeroCuentaGanancia)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(numeroCuentaGanancia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(botonConsultarGanancia)
                .addContainerGap(20, Short.MAX_VALUE))
        );

        retiroColones.setResizable(false);

        etiquetaNumeroCuentaRetiro.setText("Numero de cuenta");

        textoNumeroCuentaRetiro.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textoNumeroCuentaRetiroKeyTyped(evt);
            }
        });

        etiquetaSaldoRetiroColones.setText("Cantidad a retirar");

        textoPinColonesRetiro.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textoPinColonesRetiroKeyTyped(evt);
            }
        });

        botonRealizarRetiroColones.setText("Realizar retiro");
        botonRealizarRetiroColones.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonRealizarRetiroColonesActionPerformed(evt);
            }
        });

        retiroColonesEtiqueta.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        retiroColonesEtiqueta.setText("Realizar retiro en colones");

        textoSaldoRetiro.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textoSaldoRetiroKeyTyped(evt);
            }
        });

        etiquetaPinColones.setText("Pin");

        etiquetaPalabraColones.setText("Palabra");

        textoPalabraColones.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textoPalabraColonesKeyTyped(evt);
            }
        });

        botonGenerarPalabraRetiro.setText("Generar Palabra");
        botonGenerarPalabraRetiro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonGenerarPalabraRetiroActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout retiroColonesLayout = new javax.swing.GroupLayout(retiroColones.getContentPane());
        retiroColones.getContentPane().setLayout(retiroColonesLayout);
        retiroColonesLayout.setHorizontalGroup(
            retiroColonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(retiroColonesLayout.createSequentialGroup()
                .addGroup(retiroColonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, retiroColonesLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(retiroColonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(etiquetaNumeroCuentaRetiro)
                            .addComponent(etiquetaPinColones)
                            .addComponent(etiquetaPalabraColones)
                            .addGroup(retiroColonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(textoPinColonesRetiro, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(textoPalabraColones)
                                .addComponent(etiquetaSaldoRetiroColones, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(textoSaldoRetiro, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(27, 27, 27)
                        .addGroup(retiroColonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(botonRealizarRetiroColones, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(botonGenerarPalabraRetiro, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(13, 13, 13)))
                .addContainerGap())
            .addGroup(retiroColonesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(retiroColonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(retiroColonesEtiqueta)
                    .addComponent(textoNumeroCuentaRetiro, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        retiroColonesLayout.setVerticalGroup(
            retiroColonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(retiroColonesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(retiroColonesEtiqueta)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(etiquetaNumeroCuentaRetiro)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(textoNumeroCuentaRetiro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(etiquetaPinColones)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(textoPinColonesRetiro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(etiquetaPalabraColones)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(retiroColonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textoPalabraColones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(botonGenerarPalabraRetiro))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(etiquetaSaldoRetiroColones)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(textoSaldoRetiro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(botonRealizarRetiroColones)
                .addGap(25, 25, 25))
        );

        retiroDolares.setResizable(false);

        etiquetaNumeroCuentaRetiroDolar.setText("Numero de cuenta");

        textoNumeroCuentaRetiroDolar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textoNumeroCuentaRetiroDolarKeyTyped(evt);
            }
        });

        etiquetaSaldoRetiroColones1.setText("Cantidad a retirar");

        textoPinColonesRetiroDolar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textoPinColonesRetiroDolarKeyTyped(evt);
            }
        });

        botonRealizarRetiroDolares.setText("Realizar retiro");
        botonRealizarRetiroDolares.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonRealizarRetiroDolaresActionPerformed(evt);
            }
        });

        retiroColonesEtiqueta1.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        retiroColonesEtiqueta1.setText("Realizar retiro en dólares");

        textoSaldoRetiroDolares.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textoSaldoRetiroDolaresActionPerformed(evt);
            }
        });
        textoSaldoRetiroDolares.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textoSaldoRetiroDolaresKeyTyped(evt);
            }
        });

        etiquetaPinColonesDolar.setText("Pin");

        etiquetaPalabraDolares.setText("Palabra");

        textoPalabraDolares.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textoPalabraDolaresKeyTyped(evt);
            }
        });

        botonGenerarPalabraRetiroDolares.setText("Generar Palabra");
        botonGenerarPalabraRetiroDolares.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonGenerarPalabraRetiroDolaresActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout retiroDolaresLayout = new javax.swing.GroupLayout(retiroDolares.getContentPane());
        retiroDolares.getContentPane().setLayout(retiroDolaresLayout);
        retiroDolaresLayout.setHorizontalGroup(
            retiroDolaresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(retiroDolaresLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(retiroColonesEtiqueta1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(retiroDolaresLayout.createSequentialGroup()
                .addGroup(retiroDolaresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator2)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, retiroDolaresLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(retiroDolaresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(etiquetaNumeroCuentaRetiroDolar)
                            .addComponent(etiquetaPinColonesDolar)
                            .addComponent(etiquetaPalabraDolares)
                            .addGroup(retiroDolaresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(textoNumeroCuentaRetiroDolar, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(textoPinColonesRetiroDolar, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(textoPalabraDolares)
                                .addComponent(etiquetaSaldoRetiroColones1, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(textoSaldoRetiroDolares, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(27, 27, 27)
                        .addGroup(retiroDolaresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(botonGenerarPalabraRetiroDolares)
                            .addComponent(botonRealizarRetiroDolares))
                        .addGap(13, 13, 13)))
                .addContainerGap())
        );
        retiroDolaresLayout.setVerticalGroup(
            retiroDolaresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(retiroDolaresLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(retiroColonesEtiqueta1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(etiquetaNumeroCuentaRetiroDolar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(textoNumeroCuentaRetiroDolar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(etiquetaPinColonesDolar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(textoPinColonesRetiroDolar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(etiquetaPalabraDolares)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(retiroDolaresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textoPalabraDolares, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(botonGenerarPalabraRetiroDolares))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(etiquetaSaldoRetiroColones1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(textoSaldoRetiroDolares, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(botonRealizarRetiroDolares)
                .addGap(25, 25, 25))
        );

        transferenciaLocal.setResizable(false);

        transferenciaEtiqueta.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        transferenciaEtiqueta.setText("Realizar transferencia local");

        etiquetaNumeroCuentaOrigen.setText("Numero de cuenta del origen");

        numeroCuentaOrigen.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                numeroCuentaOrigenKeyTyped(evt);
            }
        });

        etiquetaPinOrigen.setText("Pin del origen");

        pinOrigen.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                pinOrigenKeyTyped(evt);
            }
        });

        etiquetaCuentaDestino.setText("Numero de cuenta del destino");

        numeroCuentaDestino.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                numeroCuentaDestinoKeyTyped(evt);
            }
        });

        etiquetaSaldo.setText("Saldo a transferir");

        saldoTransferencia.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                saldoTransferenciaKeyTyped(evt);
            }
        });

        etiquetaPalabra.setText("Palabra");

        palabraTransferencia.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                palabraTransferenciaKeyTyped(evt);
            }
        });

        palabraTransferenciaBoton.setText("Generar palabra");
        palabraTransferenciaBoton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                palabraTransferenciaBotonActionPerformed(evt);
            }
        });

        realizarTransferenciaBoton.setText("Realizar transferencia");
        realizarTransferenciaBoton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                realizarTransferenciaBotonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout transferenciaLocalLayout = new javax.swing.GroupLayout(transferenciaLocal.getContentPane());
        transferenciaLocal.getContentPane().setLayout(transferenciaLocalLayout);
        transferenciaLocalLayout.setHorizontalGroup(
            transferenciaLocalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(transferenciaLocalLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(transferenciaLocalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator3)
                    .addGroup(transferenciaLocalLayout.createSequentialGroup()
                        .addGroup(transferenciaLocalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(transferenciaEtiqueta)
                            .addComponent(etiquetaNumeroCuentaOrigen)
                            .addComponent(numeroCuentaOrigen, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(etiquetaPinOrigen)
                            .addComponent(pinOrigen, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(etiquetaCuentaDestino)
                            .addComponent(numeroCuentaDestino, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(etiquetaSaldo)
                            .addComponent(saldoTransferencia, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(etiquetaPalabra)
                            .addGroup(transferenciaLocalLayout.createSequentialGroup()
                                .addComponent(palabraTransferencia, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(27, 27, 27)
                                .addComponent(palabraTransferenciaBoton)))
                        .addGap(0, 45, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, transferenciaLocalLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(realizarTransferenciaBoton)
                .addGap(137, 137, 137))
        );
        transferenciaLocalLayout.setVerticalGroup(
            transferenciaLocalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(transferenciaLocalLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(transferenciaEtiqueta)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(etiquetaNumeroCuentaOrigen)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(numeroCuentaOrigen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(etiquetaPinOrigen)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pinOrigen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(etiquetaCuentaDestino)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(numeroCuentaDestino, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(etiquetaSaldo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(saldoTransferencia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(etiquetaPalabra)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(transferenciaLocalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(palabraTransferencia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(palabraTransferenciaBoton))
                .addGap(18, 18, 18)
                .addComponent(realizarTransferenciaBoton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setName("MenuPrincipal"); // NOI18N
        setResizable(false);

        tituloMenu.setFont(new java.awt.Font("Segoe UI", 3, 36)); // NOI18N
        tituloMenu.setText("Banco");

        victorMenu.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        victorMenu.setText("Victor Acuña Coto");

        BotonVistaClientes.setText("Registrar Cliente");
        BotonVistaClientes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonVistaClientesActionPerformed(evt);
            }
        });

        BotonVistaCuentas.setText("Crear Cuenta");
        BotonVistaCuentas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonVistaCuentasActionPerformed(evt);
            }
        });

        botonConsultarCompraDolar.setText("Consultar Compra Dólar");
        botonConsultarCompraDolar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonConsultarCompraDolarActionPerformed(evt);
            }
        });

        botonConsultarCuentaDolar.setText("Consultar Venta Dólar");
        botonConsultarCuentaDolar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonConsultarCuentaDolarActionPerformed(evt);
            }
        });

        botonListarClientesAscendente.setText("Listar clientes de manera ascendente");
        botonListarClientesAscendente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonListarClientesAscendenteActionPerformed(evt);
            }
        });

        botonListarCuentasDescendentes.setText("Listar cuentas de manera descendente");
        botonListarCuentasDescendentes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonListarCuentasDescendentesActionPerformed(evt);
            }
        });

        BotonDepositoColones.setText("Realizar deposito en colones");
        BotonDepositoColones.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonDepositoColonesActionPerformed(evt);
            }
        });

        BotonDepositoDolares.setText("Realizar deposito en dolares");
        BotonDepositoDolares.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonDepositoDolaresActionPerformed(evt);
            }
        });

        botonCambiarPin.setText("Cambiar pin");
        botonCambiarPin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonCambiarPinActionPerformed(evt);
            }
        });

        consultarSaldoActualColones.setText("Consultar saldo actual en colones");
        consultarSaldoActualColones.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                consultarSaldoActualColonesActionPerformed(evt);
            }
        });

        consultarSaldoActualDolares.setText("Consultar saldo actual en dólares");
        consultarSaldoActualDolares.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                consultarSaldoActualDolaresActionPerformed(evt);
            }
        });

        subtituloMenu1.setFont(new java.awt.Font("Segoe UI", 2, 18)); // NOI18N
        subtituloMenu1.setText("Menu principal");

        valeMenu.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        valeMenu.setText("Valeria Fernández Barquero");

        carlosMenu.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        carlosMenu.setText("Carlos Sánchez Leiva");

        botonEstadoCuentaColones.setText("Consultar Estado de Cuenta en Colones");
        botonEstadoCuentaColones.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonEstadoCuentaColonesActionPerformed(evt);
            }
        });

        botonConsultarEstadoCuentaDolares.setText("Consultar Estado de Cuenta en Dólares");
        botonConsultarEstadoCuentaDolares.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonConsultarEstadoCuentaDolaresActionPerformed(evt);
            }
        });

        botonEstatusCuenta.setText("Consultar estatus de la cuenta");
        botonEstatusCuenta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonEstatusCuentaActionPerformed(evt);
            }
        });

        botonConsultarGananciasGenerales.setText("Consultar ganancias totales del banco");
        botonConsultarGananciasGenerales.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonConsultarGananciasGeneralesActionPerformed(evt);
            }
        });

        botonGananciasBancoCuenta.setText("Consultar ganancias del banco por cuenta");
        botonGananciasBancoCuenta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonGananciasBancoCuentaActionPerformed(evt);
            }
        });

        botonRetiroColones.setText("Realizar un retiro en colones");
        botonRetiroColones.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonRetiroColonesActionPerformed(evt);
            }
        });

        botonRetiroDolares.setText("Realizar un retiro en dolares");
        botonRetiroDolares.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonRetiroDolaresActionPerformed(evt);
            }
        });

        botonRealizarTransferencia.setText("Realizar transferencia en colones");
        botonRealizarTransferencia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonRealizarTransferenciaActionPerformed(evt);
            }
        });

        botonSalir.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        botonSalir.setText("SALIR");
        botonSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonSalirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(separadorMenu, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(botonRealizarTransferencia, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(botonEstatusCuenta, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(victorMenu)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(valeMenu)
                        .addGap(57, 57, 57)
                        .addComponent(carlosMenu))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(botonCambiarPin, javax.swing.GroupLayout.PREFERRED_SIZE, 522, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(botonConsultarCompraDolar, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(consultarSaldoActualColones, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(consultarSaldoActualDolares, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(botonConsultarCuentaDolar, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(BotonDepositoColones, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(botonListarClientesAscendente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(BotonVistaClientes, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(botonListarCuentasDescendentes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(BotonDepositoDolares, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(BotonVistaCuentas, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(botonEstadoCuentaColones, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(botonConsultarEstadoCuentaDolares, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(tituloMenu)
                                .addGap(18, 18, 18)
                                .addComponent(subtituloMenu1))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(botonRetiroColones, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(botonConsultarGananciasGenerales, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 252, Short.MAX_VALUE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(botonGananciasBancoCuenta, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(botonRetiroDolares, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(botonSalir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(64, 64, 64)
                        .addComponent(subtituloMenu1))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(victorMenu)
                            .addComponent(valeMenu)
                            .addComponent(carlosMenu))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tituloMenu, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(separadorMenu, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BotonVistaCuentas, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BotonVistaClientes))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botonListarClientesAscendente)
                    .addComponent(botonListarCuentasDescendentes))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BotonDepositoColones)
                    .addComponent(BotonDepositoDolares))
                .addGap(18, 18, 18)
                .addComponent(botonCambiarPin)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(consultarSaldoActualColones)
                    .addComponent(consultarSaldoActualDolares))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botonConsultarCompraDolar)
                    .addComponent(botonConsultarCuentaDolar))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botonEstadoCuentaColones)
                    .addComponent(botonConsultarEstadoCuentaDolares))
                .addGap(18, 18, 18)
                .addComponent(botonEstatusCuenta)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botonConsultarGananciasGenerales)
                    .addComponent(botonGananciasBancoCuenta))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botonRetiroColones)
                    .addComponent(botonRetiroDolares))
                .addGap(18, 18, 18)
                .addComponent(botonRealizarTransferencia)
                .addGap(18, 18, 18)
                .addComponent(botonSalir)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BotonVistaClientesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonVistaClientesActionPerformed
        this.registrarClientes.pack();
        this.registrarClientes.setVisible(true);
        this.registrarClientes.setLocationRelativeTo(null);
    }//GEN-LAST:event_BotonVistaClientesActionPerformed

    
    private void BotonVistaCuentasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonVistaCuentasActionPerformed
        this.crearCuenta.pack();
        this.crearCuenta.setVisible(true);
        this.crearCuenta.setLocationRelativeTo(null);
    }//GEN-LAST:event_BotonVistaCuentasActionPerformed

    private void botonConsultarCompraDolarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonConsultarCompraDolarActionPerformed
       String consultarCompra = controlador.consultarCompraDolar();
       JOptionPane.showMessageDialog(null, consultarCompra);
    }//GEN-LAST:event_botonConsultarCompraDolarActionPerformed

    private void botonConsultarCuentaDolarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonConsultarCuentaDolarActionPerformed
        String consultarVenta = controlador.consultarVentaDolar();
        JOptionPane.showMessageDialog(null, consultarVenta);
    }//GEN-LAST:event_botonConsultarCuentaDolarActionPerformed

    private void botonListarClientesAscendenteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonListarClientesAscendenteActionPerformed
        this.listarClientesAscendentes.pack();
        this.listarClientesAscendentes.setVisible(true);
        this.listarClientesAscendentes.setLocationRelativeTo(null);
        this.listaClientesAscendente.setEditable(false);
        
        
        String listadoClientes = controlador.listarClientesAscendente(banco);
        this.listaClientesAscendente.setText(listadoClientes);
    }//GEN-LAST:event_botonListarClientesAscendenteActionPerformed

    private void identificacionClienteBuscarKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_identificacionClienteBuscarKeyTyped
        char c = evt.getKeyChar();
         
         if(!Character.isDigit(c)){
             evt.consume();
         }
    }//GEN-LAST:event_identificacionClienteBuscarKeyTyped

    private void botonBuscarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonBuscarClienteActionPerformed

        try{
            //VALIDA QUE NO ESTE VACIO
            validacion.espacioEnBlanco(this.identificacionClienteBuscar.getText());
            
            //VERIFICA EL LARGO DE LA IDENTIFICACION
            validacion.validarCedula(this.identificacionClienteBuscar.getText());
           
            //VERIFICA QUE EL CLIENTE EXISTA 
            int identificacion = Integer.parseInt(this.identificacionClienteBuscar.getText());
            validacion.clienteExiste(identificacion, banco);
            
            //BUSCA EL CLIENTE
            Cliente clienteEncontrado = banco.buscarCliente(identificacion);
            String infoCliente = clienteEncontrado.consultarDatosCliente();
            JOptionPane.showMessageDialog(null, infoCliente);
            
        }
        catch(BlankSpaceException entradaInvalida){
            JOptionPane.showMessageDialog(null, entradaInvalida.getLocalizedMessage());
        }
        catch(CedulaFormatException cedulaInvalida){
            JOptionPane.showMessageDialog(null, cedulaInvalida.getLocalizedMessage());
        }
        catch(ClienteDoesNotExistException clienteNoExiste){
            JOptionPane.showMessageDialog(null, clienteNoExiste.getLocalizedMessage());
        }
        catch(NumberFormatException numeroInvalido){
            JOptionPane.showMessageDialog(null, "Debe ingresar un numero entero.");
        }
    }//GEN-LAST:event_botonBuscarClienteActionPerformed

    private void botonListarCuentasDescendentesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonListarCuentasDescendentesActionPerformed
        this.listarCuentasDescendentes.pack();
        this.listarCuentasDescendentes.setVisible(true);
        this.listarCuentasDescendentes.setLocationRelativeTo(null);
        this.listarCuentasDescendentesTexto.setEditable(false);
        
        String listaCuentas = controlador.listarCuentasDescendente(banco);
        this.listarCuentasDescendentesTexto.setText(listaCuentas);
    }//GEN-LAST:event_botonListarCuentasDescendentesActionPerformed

    private void textoSaldoInicialKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textoSaldoInicialKeyTyped
        char c = evt.getKeyChar();
         
         if(!Character.isDigit(c)){
             evt.consume();
         }
    }//GEN-LAST:event_textoSaldoInicialKeyTyped

    private void textoIdentificacionCrearCuentaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textoIdentificacionCrearCuentaKeyTyped
        char c = evt.getKeyChar();
         
         if(!Character.isDigit(c)){
             evt.consume();
         }
    }//GEN-LAST:event_textoIdentificacionCrearCuentaKeyTyped

    private void textoPinKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textoPinKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_textoPinKeyTyped

    private void registrarClienteBotonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registrarClienteBotonActionPerformed
        
        try{
            //VALIDACIONES DE ESPACIO EN BLANCO
            validacion.espacioEnBlanco(this.textoPrimerApellido.getText());
            validacion.espacioEnBlanco(this.textoSegundoApellido.getText());
            validacion.espacioEnBlanco(this.textoNombre.getText());
            validacion.espacioEnBlanco(this.textoCorreoElectronico.getText());
            validacion.espacioEnBlanco(this.textoNumeroTelefono.getText());
            validacion.espacioEnBlanco(this.textoIdentificacion.getText());
            
            //VALIDA LA IDENTIFICACION
            validacion.validarCedula(this.textoIdentificacion.getText());
            
            //VALIDA EL NUMERO DE TELEFONO
            validacion.validarNumTel(this.textoNumeroTelefono.getText());
            
            //VALIDA EL CORREO
            validacion.validarCorreo(this.textoCorreoElectronico.getText());
            
            //VALIDAR FECHA                  
            int dia = Integer.parseInt(comboBoxDias.getSelectedItem().toString());
            int mes = Integer.parseInt(comboBoxMeses.getSelectedItem().toString());
            int anio = Integer.parseInt(comboBoxAnios.getSelectedItem().toString());
            validacion.validarFecha(dia, mes, anio);
            
            //VALIDA QUE LA CEDULA NO ESTÉ REGISTRADA ANTES
            int identificacionCliente = Integer.parseInt(this.textoIdentificacion.getText());
            validacion.clienteRepetido(identificacionCliente, banco);
            
            //REGISTRA AL USUARIO
            String primerApellidoCliente = this.textoPrimerApellido.getText();
            String segundoApellidoCliente = this.textoSegundoApellido.getText();
            String nombreCliente = this.textoNombre.getText();
            String correoCliente = this.textoCorreoElectronico.getText();
            int telefonoCliente = Integer.parseInt(this.textoNumeroTelefono.getText());
            
            String mensajeExito = controlador.registrarCliente(primerApellidoCliente, segundoApellidoCliente, nombreCliente, identificacionCliente, telefonoCliente, correoCliente, dia, mes, anio, banco);
            JOptionPane.showMessageDialog(null, mensajeExito);
            limpiarCamposRegistrarCliente();
            
        }
        catch(BlankSpaceException entradaInvalida){
            JOptionPane.showMessageDialog(null, entradaInvalida.getLocalizedMessage());
        }
        catch(CedulaFormatException cedulaInvalida){
            JOptionPane.showMessageDialog(null, cedulaInvalida.getLocalizedMessage());
        }
        catch(NumTelFormatException telefonoInvalido){
            JOptionPane.showMessageDialog(null, telefonoInvalido.getLocalizedMessage());
        }
        catch(MailFormatException correoInvalido){
            JOptionPane.showMessageDialog(null, correoInvalido.getLocalizedMessage());
        }
        catch(DateFormatException fechaInvalida){
            JOptionPane.showMessageDialog(null, fechaInvalida.getLocalizedMessage());
        }
        catch(ClienteAlreadyExistsException clienteRepetido) {
            JOptionPane.showMessageDialog(null, clienteRepetido.getLocalizedMessage());
        }
        catch(NumberFormatException numeroInvalido){
            JOptionPane.showMessageDialog(null, "Debe ingresar un numero entero.");
        }
    }//GEN-LAST:event_registrarClienteBotonActionPerformed

    private void comboBoxAniosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBoxAniosActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboBoxAniosActionPerformed

    private void textoNumeroTelefonoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textoNumeroTelefonoKeyTyped
        char c = evt.getKeyChar();

        if(!Character.isDigit(c)){
            evt.consume();
        }
    }//GEN-LAST:event_textoNumeroTelefonoKeyTyped

    private void textoIdentificacionKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textoIdentificacionKeyTyped
        char c = evt.getKeyChar();

        if(!Character.isDigit(c)){
            evt.consume();
        }
    }//GEN-LAST:event_textoIdentificacionKeyTyped

    private void numeroCuentaBuscarCuentaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_numeroCuentaBuscarCuentaKeyTyped
        char c = evt.getKeyChar();

        if(!Character.isDigit(c)){
            evt.consume();
        }
    }//GEN-LAST:event_numeroCuentaBuscarCuentaKeyTyped

    private void BotonDepositoColonesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonDepositoColonesActionPerformed
        this.depositoColones.pack();
        this.depositoColones.setVisible(true);
        this.depositoColones.setLocationRelativeTo(null);
    }//GEN-LAST:event_BotonDepositoColonesActionPerformed

    private void BotonDepositoDolaresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonDepositoDolaresActionPerformed
        this.depositoDolares.pack();
        this.depositoDolares.setVisible(rootPaneCheckingEnabled);
        this.depositoDolares.setLocationRelativeTo(null);
    }//GEN-LAST:event_BotonDepositoDolaresActionPerformed

    private void comboBoxDiasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBoxDiasActionPerformed

    }//GEN-LAST:event_comboBoxDiasActionPerformed

    private void registrarCuentaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registrarCuentaActionPerformed

        try{
            // VALIDAR ESPACIOS EN BLANCO
            validacion.espacioEnBlanco(this.textoIdentificacionCrearCuenta.getText());
            validacion.espacioEnBlanco(this.textoSaldoInicial.getText());
            validacion.espacioEnBlanco(this.textoPin.getText());
            
            // VALIDAR IDENTIFICACION CON FORMATO CORRECTO
            validacion.validarCedula(this.textoIdentificacionCrearCuenta.getText());
            
            // VALIDAR QUE LA IDENTIFICACION EXISTA
            int identificacion = Integer.parseInt(this.textoIdentificacionCrearCuenta.getText());
            validacion.clienteExiste(identificacion, banco);
            
            // VALIDAR EL PIN
            validacion.formatoPin(this.textoPin.getText());
            
            //CREA LA CUENTA
            Cliente duenioCuenta = banco.buscarCliente(identificacion);
            int depositoInicial = Integer.parseInt(this.textoSaldoInicial.getText());
            String mensajeExito = controlador.registrarCuenta(depositoInicial, this.textoPin.getText(), duenioCuenta, banco);
            
            JOptionPane.showMessageDialog(null, mensajeExito);
            
            //LIMPIA LOS ESPACIOS
            this.textoIdentificacionCrearCuenta.setText("");
            this.textoPin.setText("");
            this.textoSaldoInicial.setText("");
            
        }
        catch(BlankSpaceException espacioEnBlanco){
            JOptionPane.showMessageDialog(null, espacioEnBlanco.getLocalizedMessage());
        }
        catch(CedulaFormatException cedulaNoValida){
            JOptionPane.showMessageDialog(null, cedulaNoValida.getLocalizedMessage());
        }
        catch(ClienteDoesNotExistException clienteNoExiste){
            JOptionPane.showMessageDialog(null, clienteNoExiste.getLocalizedMessage());
        }
        catch(PinFormatException pinIncorrecto){
            JOptionPane.showMessageDialog(null, pinIncorrecto.getLocalizedMessage());
        }
        catch(NumberFormatException numeroInvalido){
            JOptionPane.showMessageDialog(null, "Debe ingresar un numero entero.");
        }
        
    }//GEN-LAST:event_registrarCuentaActionPerformed

    private void botonBuscarCuentaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonBuscarCuentaActionPerformed

        try{
            //VALIDA QUE NO EXISTA ESPACIOS EN BLANCO
            validacion.espacioEnBlanco(this.numeroCuentaBuscarCuenta.getText());
            
            //VALIDA QUE LA CUENTA EXISTE
            int numeroCuenta = Integer.parseInt(this.numeroCuentaBuscarCuenta.getText());
            validacion.cuentaExiste(numeroCuenta, banco);
            
            //BUSCA LA INFO DE LA CUENTA
            CuentaBancaria cuentaEncontrada = banco.buscarCuenta(numeroCuenta);
            String informacionCuenta = cuentaEncontrada.consultarDatosCuenta();
            JOptionPane.showMessageDialog(null, informacionCuenta);
            
        }
        catch(BlankSpaceException espacioEnBlanco){
            JOptionPane.showMessageDialog(null, espacioEnBlanco.getLocalizedMessage());
        }
        catch(CuentaDoesNotExistException cuentaNoExiste){
            JOptionPane.showMessageDialog(null, cuentaNoExiste.getLocalizedMessage());
        }
        catch(NumberFormatException numeroInvalido){
            JOptionPane.showMessageDialog(null, "Debe ingresar un numero entero.");
        }
        
    }//GEN-LAST:event_botonBuscarCuentaActionPerformed

    private void numeroCuentaBuscarCuentaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_numeroCuentaBuscarCuentaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_numeroCuentaBuscarCuentaActionPerformed

    private void botonDepositarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonDepositarActionPerformed
       
        try{
            //VALIDA QUE LOS CAMPOS NO ESTÉN VACÍOS
            validacion.espacioEnBlanco(this.textoNumeroCuentaDeposito.getText());
            validacion.espacioEnBlanco(this.textoMontoDepositar.getText());

            //VALIDA QUE LA CUENTA EXISTE
            int numeroCuenta = Integer.parseInt(this.textoNumeroCuentaDeposito.getText());
            validacion.cuentaExiste(numeroCuenta, banco);
            
            //VALIDA QUE LA CUENTA NO ESTÉ BLOQUEADA
            validacion.cuentaInactiva(numeroCuenta, banco);
            
            //REALIZA EL DEPOSITO
            int montoDeposito = Integer.parseInt(this.textoMontoDepositar.getText());
            String infoDeposito = controlador.depositarColones(numeroCuenta, montoDeposito, banco);
            JOptionPane.showMessageDialog(null, infoDeposito);
            
            this.textoMontoDepositar.setText("");
            this.textoNumeroCuentaDeposito.setText("");
            
        }
        catch(BlankSpaceException espacioEnBlanco){
            JOptionPane.showMessageDialog(null, espacioEnBlanco.getLocalizedMessage());
        }
        catch(CuentaInactivaException cuentaInactiva){
            JOptionPane.showMessageDialog(null, cuentaInactiva.getLocalizedMessage());
        }
        catch(CuentaDoesNotExistException cuentaNoExiste){
            JOptionPane.showMessageDialog(null, cuentaNoExiste.getLocalizedMessage());
        }
        catch(NumberFormatException numeroInvalido){
            JOptionPane.showMessageDialog(null, "Debe ingresar un numero entero.");
        }
    }//GEN-LAST:event_botonDepositarActionPerformed

    private void textoNumeroCuentaDepositoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textoNumeroCuentaDepositoKeyTyped
       char c = evt.getKeyChar();

        if(!Character.isDigit(c)){
            evt.consume();
        }
    }//GEN-LAST:event_textoNumeroCuentaDepositoKeyTyped

    private void textoMontoDepositarKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textoMontoDepositarKeyTyped
        char c = evt.getKeyChar();

        if(!Character.isDigit(c)){
            evt.consume();
        }
    }//GEN-LAST:event_textoMontoDepositarKeyTyped

    private void textoNumeroCuentaDepositoDolaresKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textoNumeroCuentaDepositoDolaresKeyTyped
        char c = evt.getKeyChar();

        if(!Character.isDigit(c)){
            evt.consume();
        }
    }//GEN-LAST:event_textoNumeroCuentaDepositoDolaresKeyTyped

    private void textoMontoDepositarDolaresKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textoMontoDepositarDolaresKeyTyped
        char c = evt.getKeyChar();

        if(!Character.isDigit(c)){
            evt.consume();
        }
    }//GEN-LAST:event_textoMontoDepositarDolaresKeyTyped

    public void limpiarCamposRegistrarCliente(){
       this.textoPrimerApellido.setText("");
       this.textoSegundoApellido.setText("");
       this.textoCorreoElectronico.setText("");
       this.textoIdentificacion.setText("");
       this.textoNombre.setText("");
       this.textoNumeroTelefono.setText("");
    }
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        limpiarCamposRegistrarCliente();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void botonDepositarDolaresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonDepositarDolaresActionPerformed
         try{
            //VALIDA QUE LOS CAMPOS NO ESTÉN VACÍOS
            validacion.espacioEnBlanco(this.textoNumeroCuentaDepositoDolares.getText());
            validacion.espacioEnBlanco(this.textoMontoDepositarDolares.getText());
          
            //VALIDA QUE LA CUENTA EXISTE
            int numeroCuenta = Integer.parseInt(this.textoNumeroCuentaDepositoDolares.getText());
            validacion.cuentaExiste(numeroCuenta, banco);
              
            //VALIDA QUE LA CUENTA NO ESTE INACTIVA
            validacion.cuentaInactiva(numeroCuenta, banco);
           
            //REALIZA EL DEPOSITO
            int montoDeposito = Integer.parseInt(this.textoMontoDepositarDolares.getText());
            String infoDepositoDolares = controlador.depositarDolares(numeroCuenta, montoDeposito, banco);
            JOptionPane.showMessageDialog(null, infoDepositoDolares);
            
            this.textoMontoDepositarDolares.setText("");
            this.textoNumeroCuentaDepositoDolares.setText("");
            
        }
        catch(BlankSpaceException espacioEnBlanco){
            JOptionPane.showMessageDialog(null, espacioEnBlanco.getLocalizedMessage());
        }
        catch(CuentaInactivaException cuentaInactiva){
            JOptionPane.showMessageDialog(null, cuentaInactiva.getLocalizedMessage());
        } 
        catch(CuentaDoesNotExistException cuentaNoExiste){
            JOptionPane.showMessageDialog(null, cuentaNoExiste.getLocalizedMessage());
        }
        catch(NumberFormatException numeroInvalido){
            JOptionPane.showMessageDialog(null, "Debe ingresar un numero entero.");
        }
    }//GEN-LAST:event_botonDepositarDolaresActionPerformed

    private void botonCambiarPinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonCambiarPinActionPerformed
        this.cambiarPin.pack();
        this.cambiarPin.setVisible(true);
        this.cambiarPin.setLocationRelativeTo(null);
    }//GEN-LAST:event_botonCambiarPinActionPerformed

    private void numeroCuentaConsultaColonesKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_numeroCuentaConsultaColonesKeyTyped
        char c = evt.getKeyChar();

        if(!Character.isDigit(c)){
            evt.consume();
        }
    }//GEN-LAST:event_numeroCuentaConsultaColonesKeyTyped

    private void textoPinActualColonesKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textoPinActualColonesKeyTyped

    }//GEN-LAST:event_textoPinActualColonesKeyTyped

    private void botonCambiaPinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonCambiaPinActionPerformed
        
        try{            
            //VALIDA LOS ESPACIOS VACIOS
            validacion.espacioEnBlanco(this.numeroCuentaCambiarPin.getText());
            validacion.espacioEnBlanco(this.textoPinActual.getText());
            validacion.espacioEnBlanco(this.textoNuevoPin.getText());
            
            //VALIDA EL NUMERO DE CUENTA
            int numeroCuenta = Integer.parseInt(this.numeroCuentaCambiarPin.getText());
            validacion.cuentaExiste(numeroCuenta, banco);
            
            // VALIDA QUE LA CUENTA NO ESTÉ BLOQUEADA
            validacion.cuentaInactiva(numeroCuenta, banco);
            
            //VALIDA QUE EL PIN SEA EL CORRECTO
            validacion.pinCoincide(numeroCuenta, this.textoPinActual.getText(), banco);
            
            //VALIDA QUE EL NUEVO PIN TENGA EL FORMATO CORRECTO
            validacion.formatoPin(this.textoNuevoPin.getText());
            
            //CAMBIA EL PIN
            String infoCambioPin = controlador.cambiarPin(this.textoNuevoPin.getText(), numeroCuenta, banco);
            JOptionPane.showMessageDialog(null, infoCambioPin);
            
            //REINICIA LOS CAMPOS DEL FORMULARIO
            this.textoNuevoPin.setText("");
            this.textoPinActualColones.setText("");
            this.numeroCuentaConsultaColones.setText("");
            
        }
        catch(BlankSpaceException espacioEnBlanco){
            JOptionPane.showMessageDialog(null, espacioEnBlanco.getLocalizedMessage());
        }
        catch(CuentaInactivaException cuentaInactiva){
            JOptionPane.showMessageDialog(null, cuentaInactiva.getLocalizedMessage());
        }
        catch(CuentaDoesNotExistException clienteNoExiste){
            JOptionPane.showMessageDialog(null, clienteNoExiste.getLocalizedMessage());
        }
        catch(PinDoesNotMatchException pinIncorrecto){
            JOptionPane.showMessageDialog(null, pinIncorrecto.getLocalizedMessage());
        }
        catch(PinFormatException formatoIncorrecto){
            JOptionPane.showMessageDialog(null, formatoIncorrecto.getLocalizedMessage());
        }
        catch(NumberFormatException numeroInvalido){
            JOptionPane.showMessageDialog(null, "Debe ingresar un numero entero.");
        }
        catch (MessagingException errorCorreo){
            JOptionPane.showMessageDialog(null, "No se pudo enviar el correo correctamente.");
        }
    }//GEN-LAST:event_botonCambiaPinActionPerformed

    private void consultarSaldoActualDolaresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_consultarSaldoActualDolaresActionPerformed
        this.consultarSaldoDolares.pack();
        this.consultarSaldoDolares.setVisible(true);
        this.consultarSaldoDolares.setLocationRelativeTo(null);
    }//GEN-LAST:event_consultarSaldoActualDolaresActionPerformed

    private void numeroCuentaCambiarPinKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_numeroCuentaCambiarPinKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_numeroCuentaCambiarPinKeyTyped

    private void textoPinActualKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textoPinActualKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_textoPinActualKeyTyped

    private void textoNuevoPinKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textoNuevoPinKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_textoNuevoPinKeyTyped

    private void consultarSaldoActualColonesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_consultarSaldoActualColonesActionPerformed
        this.consultarSaldoEnColones.pack();
        this.consultarSaldoEnColones.setVisible(true);
        this.consultarSaldoEnColones.setLocationRelativeTo(null);
    }//GEN-LAST:event_consultarSaldoActualColonesActionPerformed

    private void botonConsultarSaldoColonesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonConsultarSaldoColonesActionPerformed
        
        try{
            //VALIDAR ESPACIOS EN BLANCO
            validacion.espacioEnBlanco(this.numeroCuentaConsultaColones.getText());
            validacion.espacioEnBlanco(this.textoPinActualColones.getText());
            
            //VALIDA EL NUMERO DE CUENTA
            int numeroCuenta = Integer.parseInt(this.numeroCuentaConsultaColones.getText());
            validacion.cuentaExiste(numeroCuenta, banco);

            //VALIDA QUE LA CUENTA NO ESTE BLOQUEADA
            validacion.cuentaInactiva(numeroCuenta, banco);

            //VALIDA QUE EL PIN SEA EL CORRECTO
            validacion.pinCoincide(numeroCuenta, this.textoPinActualColones.getText(), banco);
            
            //REALIZA LA SOLICITUD
            String saldoColones = controlador.consultarSaldoColones(numeroCuenta, banco);
            JOptionPane.showMessageDialog(null, saldoColones);
            
            //LIMPIA LOS CAMPOS
            this.numeroCuentaConsultaColones.setText("");
            this.textoPinActualColones.setText("");
            
            
        }
        catch(BlankSpaceException espacioEnBlanco){
            JOptionPane.showMessageDialog(null, espacioEnBlanco.getLocalizedMessage());
        }
        catch(CuentaInactivaException cuentaInactiva){
            JOptionPane.showMessageDialog(null, cuentaInactiva.getLocalizedMessage());
        }
        catch(CuentaDoesNotExistException cuentaNoExiste){
            JOptionPane.showMessageDialog(null, cuentaNoExiste.getLocalizedMessage());
        }
        catch(PinDoesNotMatchException pinIncorrecto){
            JOptionPane.showMessageDialog(null, pinIncorrecto.getLocalizedMessage());
        }
        catch(NumberFormatException numeroInvalido){
            JOptionPane.showMessageDialog(null, "Debe ingresar un numero entero.");
        }
        catch (MessagingException errorCorreo){
            JOptionPane.showMessageDialog(null, "No se pudo enviar el correo correctamente.");
        }
        
    }//GEN-LAST:event_botonConsultarSaldoColonesActionPerformed

    private void numeroCuentaConsultaDolaresKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_numeroCuentaConsultaDolaresKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_numeroCuentaConsultaDolaresKeyTyped

    private void textoPinActualDolaresKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textoPinActualDolaresKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_textoPinActualDolaresKeyTyped

    private void botonConsultarSaldoDolaresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonConsultarSaldoDolaresActionPerformed
        try{
            //VALIDAR ESPACIOS EN BLANCO
            validacion.espacioEnBlanco(this.numeroCuentaConsultaDolares.getText());
            validacion.espacioEnBlanco(this.textoPinActualDolares.getText());

            //VALIDA EL NUMERO DE CUENTA
            int numeroCuenta = Integer.parseInt(this.numeroCuentaConsultaDolares.getText());
            validacion.cuentaExiste(numeroCuenta, banco);

            //VALIDA QUE LA CUENTA NO ESTE BLOQUEADA
            validacion.cuentaInactiva(numeroCuenta, banco);
            
            //VALIDA QUE EL PIN SEA EL CORRECTO
            validacion.pinCoincide(numeroCuenta, this.textoPinActualDolares.getText(), banco);
            
            //REALIZA LA SOLICITUD
            String saldoDolares = controlador.consultarSaldoDolares(numeroCuenta, banco);
            JOptionPane.showMessageDialog(null, saldoDolares);
            
            //LIMPIA LOS CAMPOS
            this.numeroCuentaConsultaDolares.setText("");
            this.textoPinActualDolares.setText("");

        }
        catch(BlankSpaceException espacioEnBlanco){
            JOptionPane.showMessageDialog(null, espacioEnBlanco.getLocalizedMessage());
        }
        catch(CuentaInactivaException cuentaInactiva){
            JOptionPane.showMessageDialog(null, cuentaInactiva.getLocalizedMessage());
        }
        catch(CuentaDoesNotExistException cuentaNoExiste){
            JOptionPane.showMessageDialog(null, cuentaNoExiste.getLocalizedMessage());
        }
        catch(PinDoesNotMatchException pinIncorrecto){
            JOptionPane.showMessageDialog(null, pinIncorrecto.getLocalizedMessage());
        }
        catch(NumberFormatException numeroInvalido){
            JOptionPane.showMessageDialog(null, "Debe ingresar un numero entero.");
        }
        catch (MessagingException errorCorreo){
            JOptionPane.showMessageDialog(null, "No se pudo enviar el correo correctamente.");
        }
    }//GEN-LAST:event_botonConsultarSaldoDolaresActionPerformed

    private void numeroCuentaEstadoCuentaColonesKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_numeroCuentaEstadoCuentaColonesKeyTyped
        char c = evt.getKeyChar();

        if(!Character.isDigit(c)){
            evt.consume();
        }
    }//GEN-LAST:event_numeroCuentaEstadoCuentaColonesKeyTyped

    private void numeroPinEstadoCuentaColonesKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_numeroPinEstadoCuentaColonesKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_numeroPinEstadoCuentaColonesKeyTyped

    private void botonConsultarEstadoCuentaColonesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonConsultarEstadoCuentaColonesActionPerformed
        try{
            //VALIDAR QUE NO ESTE EN BLANCO
            validacion.espacioEnBlanco(this.numeroCuentaEstadoCuentaColones.getText());
            validacion.espacioEnBlanco((this.numeroPinEstadoCuentaColones.getText()));
            
            //VALIDAR QUE LA CUENTA EXISTA
            int numeroCuenta = Integer.parseInt(this.numeroCuentaEstadoCuentaColones.getText());
            validacion.cuentaExiste(numeroCuenta, banco);
            
            //VALIDAR QUE LA CUENTA NO ESTE BLOQUEADA
            validacion.cuentaInactiva(numeroCuenta, banco);
            
            //VALIDAR QUE EL PIN ESTE CORRECTO
            validacion.pinCoincide(numeroCuenta, this.numeroPinEstadoCuentaColones.getText(), banco);
            
            //EJECUTA LA CONSULTA
            String estadoCuentaColones = controlador.consultarEstadoCuentaColones(numeroCuenta, banco);
            JOptionPane.showMessageDialog(null, estadoCuentaColones);
            
            //LIMPIA LOS CAMPOS
            this.numeroCuentaEstadoCuentaColones.setText("");
            this.numeroPinEstadoCuentaColones.setText("");
        }
        catch(BlankSpaceException espacioEnBlanco){
            JOptionPane.showMessageDialog(null, espacioEnBlanco.getLocalizedMessage());
        }
        catch(CuentaDoesNotExistException cuentaNoEncontrada){
            JOptionPane.showMessageDialog(null, cuentaNoEncontrada.getLocalizedMessage());
        }
        catch(CuentaInactivaException cuentaInactiva){
            JOptionPane.showMessageDialog(null, cuentaInactiva.getLocalizedMessage());
        }
        catch(PinDoesNotMatchException pinIncorrecto){
            JOptionPane.showMessageDialog(null, pinIncorrecto.getLocalizedMessage());
        }
        catch(NumberFormatException numeroInvalido){
            JOptionPane.showMessageDialog(null, "Debe ingresar un numero entero.");
        }
        catch (MessagingException errorCorreo){
            JOptionPane.showMessageDialog(null, "No se pudo enviar el correo correctamente.");
        }
    }//GEN-LAST:event_botonConsultarEstadoCuentaColonesActionPerformed

    private void numeroCuentaEstadoCuentaColonesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_numeroCuentaEstadoCuentaColonesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_numeroCuentaEstadoCuentaColonesActionPerformed

    private void botonEstadoCuentaColonesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonEstadoCuentaColonesActionPerformed
        this.consultarEstadoCuentaColones.pack();
        this.consultarEstadoCuentaColones.setVisible(true);
        this.consultarEstadoCuentaColones.setLocationRelativeTo(null);
    }//GEN-LAST:event_botonEstadoCuentaColonesActionPerformed

    private void numeroCuentaEstadoCuentaDolaresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_numeroCuentaEstadoCuentaDolaresActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_numeroCuentaEstadoCuentaDolaresActionPerformed

    private void numeroCuentaEstadoCuentaDolaresKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_numeroCuentaEstadoCuentaDolaresKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_numeroCuentaEstadoCuentaDolaresKeyTyped

    private void numeroPinEstadoCuentaDolaresKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_numeroPinEstadoCuentaDolaresKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_numeroPinEstadoCuentaDolaresKeyTyped

    private void botonCuentaEstadoDolaresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonCuentaEstadoDolaresActionPerformed
       try{
            //VALIDAR QUE NO ESTE EN BLANCO
            validacion.espacioEnBlanco(this.numeroCuentaEstadoCuentaDolares.getText());
            validacion.espacioEnBlanco((this.numeroPinEstadoCuentaDolares.getText()));
            
            //VALIDAR QUE LA CUENTA EXISTA
            int numeroCuenta = Integer.parseInt(this.numeroCuentaEstadoCuentaDolares.getText());
            validacion.cuentaExiste(numeroCuenta, banco);
            
            //VALIDAR QUE LA CUENTA NO ESTE BLOQUEADA
            validacion.cuentaInactiva(numeroCuenta, banco);
            
            //VALIDAR QUE EL PIN ESTE CORRECTO
            validacion.pinCoincide(numeroCuenta, this.numeroPinEstadoCuentaDolares.getText(), banco);
            
            //EJECUTA LA CONSULTA
            String estadoCuentaDolares = controlador.consultarEstadoCuentaDolares(numeroCuenta, banco);
            JOptionPane.showMessageDialog(null, estadoCuentaDolares);
            
            //LIMPIA LOS CAMPOS
            this.numeroCuentaEstadoCuentaDolares.setText("");
            this.numeroPinEstadoCuentaDolares.setText("");
        }
        catch(BlankSpaceException espacioEnBlanco){
            JOptionPane.showMessageDialog(null, espacioEnBlanco.getLocalizedMessage());
        }
        catch(CuentaDoesNotExistException cuentaNoEncontrada){
            JOptionPane.showMessageDialog(null, cuentaNoEncontrada.getLocalizedMessage());
        }
        catch(CuentaInactivaException cuentaInactiva){
            JOptionPane.showMessageDialog(null, cuentaInactiva.getLocalizedMessage());
        }
        catch(PinDoesNotMatchException pinIncorrecto){
            JOptionPane.showMessageDialog(null, pinIncorrecto.getLocalizedMessage());
        }
        catch(NumberFormatException numeroInvalido){
            JOptionPane.showMessageDialog(null, "Debe ingresar un numero entero.");
        }
       catch (MessagingException errorCorreo){
            JOptionPane.showMessageDialog(null, "No se pudo enviar el correo correctamente.");
        }
    }//GEN-LAST:event_botonCuentaEstadoDolaresActionPerformed

    private void botonConsultarEstadoCuentaDolaresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonConsultarEstadoCuentaDolaresActionPerformed
        this.consultarEstadoCuentaDolares.pack();
        this.consultarEstadoCuentaDolares.setVisible(true);
        this.consultarEstadoCuentaDolares.setLocationRelativeTo(null);
    }//GEN-LAST:event_botonConsultarEstadoCuentaDolaresActionPerformed

    private void numeroCuentaEstatusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_numeroCuentaEstatusActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_numeroCuentaEstatusActionPerformed

    private void numeroCuentaEstatusKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_numeroCuentaEstatusKeyTyped
        char c = evt.getKeyChar();

        if(!Character.isDigit(c)){
            evt.consume();
        }
    }//GEN-LAST:event_numeroCuentaEstatusKeyTyped

    private void botonConsultarEstatusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonConsultarEstatusActionPerformed
        try{
            //VALIDA EL ESPACIO EN BLANCO
            validacion.espacioEnBlanco(this.numeroCuentaEstatus.getText());
            
            //VALIDA QUE LA CUENTA EXISTA
            int numeroCuenta = Integer.parseInt(this.numeroCuentaEstatus.getText());
            validacion.cuentaExiste(numeroCuenta, banco);
            
            //REALIZA LA OPERACION
            String estatusCuenta = controlador.consultarEstatusCuenta(numeroCuenta, banco);
            JOptionPane.showMessageDialog(null, estatusCuenta);
            
            //VACIA LOS ESPACIOS
            this.numeroCuentaEstatus.setText("");
        }
        catch(BlankSpaceException espacioEnBlanco){
            JOptionPane.showMessageDialog(null, espacioEnBlanco.getLocalizedMessage());
        }
        catch(CuentaDoesNotExistException cuentaNoExiste){
            JOptionPane.showMessageDialog(null, cuentaNoExiste.getLocalizedMessage());
        }
        catch(NumberFormatException numeroInvalido){
            JOptionPane.showMessageDialog(null, "Debe ingresar un numero entero.");
        }
    }//GEN-LAST:event_botonConsultarEstatusActionPerformed

    private void botonEstatusCuentaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonEstatusCuentaActionPerformed
        this.consultarEstatusCuenta.pack();
        this.consultarEstatusCuenta.setVisible(true);
        this.consultarEstatusCuenta.setLocationRelativeTo(null);
    }//GEN-LAST:event_botonEstatusCuentaActionPerformed

    private void botonConsultarGananciasGeneralesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonConsultarGananciasGeneralesActionPerformed
        String gananciasTotalesBanco = controlador.consultarGananciasBanco(banco);
        JOptionPane.showMessageDialog(null, gananciasTotalesBanco);
    }//GEN-LAST:event_botonConsultarGananciasGeneralesActionPerformed

    private void numeroCuentaGananciaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_numeroCuentaGananciaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_numeroCuentaGananciaActionPerformed

    private void numeroCuentaGananciaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_numeroCuentaGananciaKeyTyped
        char c = evt.getKeyChar();

        if(!Character.isDigit(c)){
            evt.consume();
        }
    }//GEN-LAST:event_numeroCuentaGananciaKeyTyped

    private void botonConsultarGananciaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonConsultarGananciaActionPerformed
          try{
            //VALIDA EL ESPACIO EN BLANCO
            validacion.espacioEnBlanco(this.numeroCuentaGanancia.getText());
            
            //VALIDA QUE LA CUENTA EXISTA
            int numeroCuenta = Integer.parseInt(this.numeroCuentaGanancia.getText());
            validacion.cuentaExiste(numeroCuenta, banco);
            
            //VALIDA QUE NO ESTE BLOQUEADA
            validacion.cuentaInactiva(numeroCuenta, banco);
            
            //REALIZA LA OPERACION
            String ganaciasCuenta = controlador.consultarGananciasCuenta(numeroCuenta, banco);
            JOptionPane.showMessageDialog(null, ganaciasCuenta);
            
            //VACIA LOS ESPACIOS
            this.numeroCuentaGanancia.setText("");
        }
        catch(BlankSpaceException espacioEnBlanco){
            JOptionPane.showMessageDialog(null, espacioEnBlanco.getLocalizedMessage());
        }
        catch(CuentaInactivaException cuentaInactiva){
            JOptionPane.showMessageDialog(null, cuentaInactiva.getLocalizedMessage());
        }
        catch(CuentaDoesNotExistException cuentaNoExiste){
            JOptionPane.showMessageDialog(null, cuentaNoExiste.getLocalizedMessage());
        }
        catch(NumberFormatException numeroInvalido){
            JOptionPane.showMessageDialog(null, "Debe ingresar un numero entero.");
        }
    }//GEN-LAST:event_botonConsultarGananciaActionPerformed

    private void botonGananciasBancoCuentaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonGananciasBancoCuentaActionPerformed
        this.consultarGananciasBancoCuenta.pack();
        this.consultarGananciasBancoCuenta.setVisible(true);
        this.consultarGananciasBancoCuenta.setLocationRelativeTo(null);
    }//GEN-LAST:event_botonGananciasBancoCuentaActionPerformed

    private void botonSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonSalirActionPerformed
        System.exit(0);
    }//GEN-LAST:event_botonSalirActionPerformed

    private void botonRetiroColonesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonRetiroColonesActionPerformed
        this.retiroColones.pack();
        this.retiroColones.setVisible(true);
        this.retiroColones.setLocationRelativeTo(null);
    }//GEN-LAST:event_botonRetiroColonesActionPerformed

    private void textoNumeroCuentaRetiroKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textoNumeroCuentaRetiroKeyTyped
        char c = evt.getKeyChar();

        if(!Character.isDigit(c)){
            evt.consume();
        }
    }//GEN-LAST:event_textoNumeroCuentaRetiroKeyTyped

    private void textoPinColonesRetiroKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textoPinColonesRetiroKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_textoPinColonesRetiroKeyTyped

    private void botonRealizarRetiroColonesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonRealizarRetiroColonesActionPerformed
        try{
            //VALIDAR ESPACIOS EN BLANCO
            validacion.espacioEnBlanco(this.textoNumeroCuentaRetiro.getText());
            validacion.espacioEnBlanco(this.textoPinColonesRetiro.getText());
            validacion.espacioEnBlanco(this.textoPalabraColones.getText());
            validacion.espacioEnBlanco(this.textoSaldoRetiro.getText());
            
            //VALIDAR QUE LA CUENTA EXISTA
            int numeroCuenta = Integer.parseInt(this.textoNumeroCuentaRetiro.getText());
            validacion.cuentaExiste(numeroCuenta, banco);
            
            //VALIDAR QUE LA CUENTA NO ESTE BLOQUEADA
            validacion.cuentaInactiva(numeroCuenta, banco);
            
            //VALIDAR EL PIN
            validacion.pinCoincide(numeroCuenta, this.textoPinColonesRetiro.getText(), banco);
            
            //VALIDAR LA PALABRA
             validacion.palabraTelIncorrecta(palabraGenerada, this.textoPalabraColones.getText(), numeroCuenta, banco);
             
            //VALIDAR SALDO DE LA CUENTA
            int montoRetirar = Integer.parseInt(this.textoSaldoRetiro.getText());
            validacion.fondosInsuficientes(numeroCuenta, montoRetirar, banco);
            
            //REALIZAR OPERACION
            String retiroColones = controlador.retirarColones(numeroCuenta, montoRetirar, banco);
            JOptionPane.showMessageDialog(null, retiroColones);
            
            //LIMPIAR LOS CAMPOS
            this.textoNumeroCuentaRetiro.setText("");
            this.textoPinColonesRetiro.setText("");
            this.textoPalabraColones.setText("");
            this.textoSaldoRetiro.setText("");
            
        }
        catch(BlankSpaceException espacioEnBlanco){
            JOptionPane.showMessageDialog(null, espacioEnBlanco.getLocalizedMessage());
        }
        catch(CuentaDoesNotExistException cuentaNoExiste){
            JOptionPane.showMessageDialog(null, cuentaNoExiste.getLocalizedMessage());
        }
        catch(CuentaInactivaException cuentaInactiva){
            JOptionPane.showMessageDialog(null, cuentaInactiva.getLocalizedMessage());
        }
        catch(PinDoesNotMatchException pinInvalido){
            JOptionPane.showMessageDialog(null, pinInvalido.getLocalizedMessage());
        }
        catch (PalabraTelefonoIncorrectaException telefonoIncorrecto) {
            JOptionPane.showMessageDialog(null, telefonoIncorrecto.getLocalizedMessage());
        }
        catch(CuentaDoesNotHaveMoneyException cuentaSinFondos){
            JOptionPane.showMessageDialog(null, cuentaSinFondos.getLocalizedMessage());
        }
        catch(NumberFormatException numeroInvalido){
            JOptionPane.showMessageDialog(null, "Debe ingresar un numero entero.");
        }
        catch (MessagingException errorCorreo){
            JOptionPane.showMessageDialog(null, "No se pudo enviar el correo correctamente.");
        }
    }//GEN-LAST:event_botonRealizarRetiroColonesActionPerformed

    private void textoSaldoRetiroKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textoSaldoRetiroKeyTyped
        char c = evt.getKeyChar();

        if(!Character.isDigit(c)){
            evt.consume();
        }
    }//GEN-LAST:event_textoSaldoRetiroKeyTyped

    private void textoPalabraColonesKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textoPalabraColonesKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_textoPalabraColonesKeyTyped

    private void botonGenerarPalabraRetiroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonGenerarPalabraRetiroActionPerformed
        
        try{
            //VALIDAR EL ESPACIO EN BLANCO
            validacion.espacioEnBlanco(this.textoNumeroCuentaRetiro.getText());
            
            //VALIDA QUE LA CUENTA EXISTA
            int numeroCuenta = Integer.parseInt(this.textoNumeroCuentaRetiro.getText());
            validacion.cuentaExiste(numeroCuenta, banco);
            
            //VALIDA QUE LA CUENTA NO ESTÉ BLOQUEADA
            validacion.cuentaInactiva(numeroCuenta, banco);
            
            //ENVIA EL MENSAJE
            String mensajeEnviado = controlador.enviarMensaje(numeroCuenta, banco);
            palabraGenerada = mensajeEnviado;
            JOptionPane.showMessageDialog(null, "Palabra secreta generada. Revise su teléfono.");
            
        }
        catch(BlankSpaceException espacioEnBlanco){
            JOptionPane.showMessageDialog(null, espacioEnBlanco.getLocalizedMessage());
        }
        catch(CuentaDoesNotExistException cuentaNoExiste){
            JOptionPane.showMessageDialog(null, cuentaNoExiste.getLocalizedMessage());
        }
        catch(CuentaInactivaException cuentaInactiva){
            JOptionPane.showMessageDialog(null, cuentaInactiva.getLocalizedMessage());
        } 
        catch (IOException ex) {
            Logger.getLogger(VistaGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
        catch(NumberFormatException numeroInvalido){
            JOptionPane.showMessageDialog(null, "Debe ingresar un numero entero.");
        }
    }//GEN-LAST:event_botonGenerarPalabraRetiroActionPerformed

    private void textoNumeroCuentaRetiroDolarKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textoNumeroCuentaRetiroDolarKeyTyped
        char c = evt.getKeyChar();

        if(!Character.isDigit(c)){
            evt.consume();
        }
    }//GEN-LAST:event_textoNumeroCuentaRetiroDolarKeyTyped

    private void textoPinColonesRetiroDolarKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textoPinColonesRetiroDolarKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_textoPinColonesRetiroDolarKeyTyped

    private void botonRealizarRetiroDolaresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonRealizarRetiroDolaresActionPerformed
        try{
            //VALIDAR ESPACIOS EN BLANCO
            validacion.espacioEnBlanco(this.textoNumeroCuentaRetiroDolar.getText());
            validacion.espacioEnBlanco(this.textoPinColonesRetiroDolar.getText());
            validacion.espacioEnBlanco(this.textoPalabraDolares.getText());
            validacion.espacioEnBlanco(this.textoSaldoRetiroDolares.getText());
            
            //VALIDAR QUE LA CUENTA EXISTA
            int numeroCuenta = Integer.parseInt(this.textoNumeroCuentaRetiroDolar.getText());
            validacion.cuentaExiste(numeroCuenta, banco);
            
            //VALIDAR QUE LA CUENTA NO ESTE BLOQUEADA
            validacion.cuentaInactiva(numeroCuenta, banco);
            
            //VALIDAR EL PIN
            validacion.pinCoincide(numeroCuenta, this.textoPinColonesRetiroDolar.getText(), banco);
            
            //VALIDAR LA PALABRA
            validacion.palabraTelIncorrecta(palabraGenerada, this.textoPalabraDolares.getText(), numeroCuenta, banco);
            
            //VALIDAR SALDO DE LA CUENTA
            int montoRetirar = Integer.parseInt(this.textoSaldoRetiroDolares.getText());
            validacion.fondosInsuficientes(numeroCuenta, montoRetirar, banco);
            
            //REALIZAR OPERACION
            String retiroDolares = controlador.retirarDolares(numeroCuenta, montoRetirar, banco);
            JOptionPane.showMessageDialog(null, retiroDolares);
            
            //LIMPIAR LOS CAMPOS
            this.textoNumeroCuentaRetiroDolar.setText("");
            this.textoPinColonesRetiroDolar.setText("");
            this.textoPalabraDolares.setText("");
            this.textoSaldoRetiroDolares.setText("");
            
        }
        catch(BlankSpaceException espacioEnBlanco){
            JOptionPane.showMessageDialog(null, espacioEnBlanco.getLocalizedMessage());
        }
        catch(CuentaDoesNotExistException cuentaNoExiste){
            JOptionPane.showMessageDialog(null, cuentaNoExiste.getLocalizedMessage());
        }
        catch(CuentaInactivaException cuentaInactiva){
            JOptionPane.showMessageDialog(null, cuentaInactiva.getLocalizedMessage());
        }
        catch(PinDoesNotMatchException pinInvalido){
            JOptionPane.showMessageDialog(null, pinInvalido.getLocalizedMessage());
        }
        catch(PalabraTelefonoIncorrectaException palabraIncorrecta){
            JOptionPane.showMessageDialog(null, palabraIncorrecta.getLocalizedMessage());
        }
        catch(CuentaDoesNotHaveMoneyException cuentaSinFondos){
            JOptionPane.showMessageDialog(null, cuentaSinFondos.getLocalizedMessage());
        }
        catch(NumberFormatException numeroInvalido){
            JOptionPane.showMessageDialog(null, "Debe ingresar un numero entero.");
        }
        catch (MessagingException errorCorreo){
            JOptionPane.showMessageDialog(null, "No se pudo enviar el correo correctamente.");
        }
    }//GEN-LAST:event_botonRealizarRetiroDolaresActionPerformed

    private void textoSaldoRetiroDolaresKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textoSaldoRetiroDolaresKeyTyped
        char c = evt.getKeyChar();

        if(!Character.isDigit(c)){
            evt.consume();
        }
    }//GEN-LAST:event_textoSaldoRetiroDolaresKeyTyped

    private void textoPalabraDolaresKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textoPalabraDolaresKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_textoPalabraDolaresKeyTyped

    private void botonGenerarPalabraRetiroDolaresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonGenerarPalabraRetiroDolaresActionPerformed
        try{
            //VALIDAR EL ESPACIO EN BLANCO
            validacion.espacioEnBlanco(this.textoNumeroCuentaRetiroDolar.getText());
            
            //VALIDA QUE LA CUENTA EXISTA
            int numeroCuenta = Integer.parseInt(this.textoNumeroCuentaRetiroDolar.getText());
            validacion.cuentaExiste(numeroCuenta, banco);
            
            //VALIDA QUE LA CUENTA NO ESTÉ BLOQUEADA
            validacion.cuentaInactiva(numeroCuenta, banco);
            
            //ENVIA EL MENSAJE
            String mensajeEnviado = controlador.enviarMensaje(numeroCuenta, banco);
            palabraGenerada = mensajeEnviado;
            JOptionPane.showMessageDialog(null, "Palabra secreta generada. Revise su teléfono.");
            
        }
        catch(BlankSpaceException espacioEnBlanco){
            JOptionPane.showMessageDialog(null, espacioEnBlanco.getLocalizedMessage());
        }
        catch(CuentaDoesNotExistException cuentaNoExiste){
            JOptionPane.showMessageDialog(null, cuentaNoExiste.getLocalizedMessage());
        }
        catch(CuentaInactivaException cuentaInactiva){
            JOptionPane.showMessageDialog(null, cuentaInactiva.getLocalizedMessage());
        } 
        catch (IOException ex) {
            Logger.getLogger(VistaGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
        catch(NumberFormatException numeroInvalido){
            JOptionPane.showMessageDialog(null, "Debe ingresar un numero entero.");
        }
    }//GEN-LAST:event_botonGenerarPalabraRetiroDolaresActionPerformed

    private void botonRetiroDolaresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonRetiroDolaresActionPerformed
        this.retiroDolares.pack();
        this.retiroDolares.setVisible(true);
        this.retiroDolares.setLocationRelativeTo(null);
    }//GEN-LAST:event_botonRetiroDolaresActionPerformed

    private void textoSaldoRetiroDolaresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textoSaldoRetiroDolaresActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textoSaldoRetiroDolaresActionPerformed

    private void botonRealizarTransferenciaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonRealizarTransferenciaActionPerformed
       this.transferenciaLocal.pack();
       this.transferenciaLocal.setVisible(true);
       this.transferenciaLocal.setLocationRelativeTo(null);
    }//GEN-LAST:event_botonRealizarTransferenciaActionPerformed

    private void numeroCuentaOrigenKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_numeroCuentaOrigenKeyTyped
        char c = evt.getKeyChar();

        if(!Character.isDigit(c)){
            evt.consume();
        }
    }//GEN-LAST:event_numeroCuentaOrigenKeyTyped

    private void pinOrigenKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_pinOrigenKeyTyped

    }//GEN-LAST:event_pinOrigenKeyTyped

    private void numeroCuentaDestinoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_numeroCuentaDestinoKeyTyped
        char c = evt.getKeyChar();

        if(!Character.isDigit(c)){
            evt.consume();
        }
    }//GEN-LAST:event_numeroCuentaDestinoKeyTyped

    private void saldoTransferenciaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_saldoTransferenciaKeyTyped
        char c = evt.getKeyChar();

        if(!Character.isDigit(c)){
            evt.consume();
        }
    }//GEN-LAST:event_saldoTransferenciaKeyTyped

    private void palabraTransferenciaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_palabraTransferenciaKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_palabraTransferenciaKeyTyped

    private void realizarTransferenciaBotonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_realizarTransferenciaBotonActionPerformed
        
        try{
            //VALIDAR ESPACIOS EN BLANCO
            validacion.espacioEnBlanco(this.numeroCuentaOrigen.getText());
            validacion.espacioEnBlanco(this.numeroCuentaDestino.getText());
            validacion.espacioEnBlanco(this.pinOrigen.getText());
            validacion.espacioEnBlanco(this.palabraTransferencia.getText());
            validacion.espacioEnBlanco(this.saldoTransferencia.getText());
            
            
            //VALIDAR QUE LA CUENTA EXISTA
            int numeroCuentaSale = Integer.parseInt(this.numeroCuentaOrigen.getText());
            validacion.cuentaExiste(numeroCuentaSale, banco);
            
            int numeroCuentaRecibe = Integer.parseInt(this.numeroCuentaDestino.getText());
            validacion.cuentaExiste(numeroCuentaRecibe, banco);
            
            //VALIDAR QUE LA CUENTA NO ESTE BLOQUEADA
            validacion.cuentaInactiva(numeroCuentaSale, banco);
            validacion.cuentaInactiva(numeroCuentaRecibe, banco);
            
            //VALIDAR EL PIN
            validacion.pinCoincide(numeroCuentaSale, this.pinOrigen.getText(), banco);
            
            //VALIDAR LA PALABRA
            validacion.palabraTelIncorrecta(palabraGenerada, this.palabraTransferencia.getText(), numeroCuentaSale, banco);
            
            //VALIDAR SALDO DE LA CUENTA
            int montoTransferir = Integer.parseInt(this.saldoTransferencia.getText());
            validacion.fondosInsuficientes(numeroCuentaSale, montoTransferir, banco);
            
            //REALIZAR OPERACION
            String transferencia = controlador.realizarTransferencias(numeroCuentaSale, numeroCuentaRecibe, montoTransferir, banco);
            JOptionPane.showMessageDialog(null, transferencia);
            
            //LIMPIAR LOS CAMPOS
            this.numeroCuentaOrigen.setText("");
            this.pinOrigen.setText("");
            this.palabraTransferencia.setText("");
            this.saldoTransferencia.setText("");
            this.numeroCuentaDestino.setText("");
            
        }
        catch(BlankSpaceException espacioEnBlanco){
            JOptionPane.showMessageDialog(null, espacioEnBlanco.getLocalizedMessage());
        }
        catch(CuentaDoesNotExistException cuentaNoExiste){
            JOptionPane.showMessageDialog(null, cuentaNoExiste.getLocalizedMessage());
        }
        catch(CuentaInactivaException cuentaInactiva){
            JOptionPane.showMessageDialog(null, cuentaInactiva.getLocalizedMessage());
        }
        catch(PinDoesNotMatchException pinInvalido){
            JOptionPane.showMessageDialog(null, pinInvalido.getLocalizedMessage());
        }
        catch(PalabraTelefonoIncorrectaException palabraIncorrecta){
            JOptionPane.showMessageDialog(null, palabraIncorrecta.getLocalizedMessage());
        }
        catch(CuentaDoesNotHaveMoneyException cuentaSinFondos){
            JOptionPane.showMessageDialog(null, cuentaSinFondos.getLocalizedMessage());
        }
        catch(NumberFormatException numeroInvalido){
            JOptionPane.showMessageDialog(null, "Debe ingresar un numero entero.");
        }
        catch (MessagingException errorCorreo){
            JOptionPane.showMessageDialog(null, "No se pudo enviar el correo correctamente.");
        }
    }//GEN-LAST:event_realizarTransferenciaBotonActionPerformed

    private void palabraTransferenciaBotonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_palabraTransferenciaBotonActionPerformed
        try{
            //VALIDAR EL ESPACIO EN BLANCO
            validacion.espacioEnBlanco(this.numeroCuentaOrigen.getText());
            
            //VALIDA QUE LA CUENTA EXISTA
            int numeroCuenta = Integer.parseInt(this.numeroCuentaOrigen.getText());
            validacion.cuentaExiste(numeroCuenta, banco);
            
            //VALIDA QUE LA CUENTA NO ESTÉ BLOQUEADA
            validacion.cuentaInactiva(numeroCuenta, banco);
            
            //ENVIA EL MENSAJE
            String mensajeEnviado = controlador.enviarMensaje(numeroCuenta, banco);
            palabraGenerada = mensajeEnviado;
            JOptionPane.showMessageDialog(null, "Palabra secreta generada. Revise su teléfono.");
            
        }
        catch(BlankSpaceException espacioEnBlanco){
            JOptionPane.showMessageDialog(null, espacioEnBlanco.getLocalizedMessage());
        }
        catch(CuentaDoesNotExistException cuentaNoExiste){
            JOptionPane.showMessageDialog(null, cuentaNoExiste.getLocalizedMessage());
        }
        catch(CuentaInactivaException cuentaInactiva){
            JOptionPane.showMessageDialog(null, cuentaInactiva.getLocalizedMessage());
        } 
        catch (IOException ex) {
            Logger.getLogger(VistaGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
        catch(NumberFormatException numeroInvalido){
            JOptionPane.showMessageDialog(null, "Debe ingresar un numero entero.");
        }
    }//GEN-LAST:event_palabraTransferenciaBotonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VistaGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VistaGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VistaGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VistaGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VistaGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton BotonDepositoColones;
    private javax.swing.JToggleButton BotonDepositoDolares;
    private javax.swing.JToggleButton BotonVistaClientes;
    private javax.swing.JToggleButton BotonVistaCuentas;
    private javax.swing.JButton botonBuscarCliente;
    private javax.swing.JButton botonBuscarCuenta;
    private javax.swing.JButton botonCambiaPin;
    private javax.swing.JButton botonCambiarPin;
    private javax.swing.JToggleButton botonConsultarCompraDolar;
    private javax.swing.JToggleButton botonConsultarCuentaDolar;
    private javax.swing.JButton botonConsultarEstadoCuentaColones;
    private javax.swing.JButton botonConsultarEstadoCuentaDolares;
    private javax.swing.JButton botonConsultarEstatus;
    private javax.swing.JButton botonConsultarGanancia;
    private javax.swing.JButton botonConsultarGananciasGenerales;
    private javax.swing.JButton botonConsultarSaldoColones;
    private javax.swing.JButton botonConsultarSaldoDolares;
    private javax.swing.JButton botonCuentaEstadoDolares;
    private javax.swing.JButton botonDepositar;
    private javax.swing.JButton botonDepositarDolares;
    private javax.swing.JButton botonEstadoCuentaColones;
    private javax.swing.JButton botonEstatusCuenta;
    private javax.swing.JButton botonGananciasBancoCuenta;
    private javax.swing.JButton botonGenerarPalabraRetiro;
    private javax.swing.JButton botonGenerarPalabraRetiroDolares;
    private javax.swing.JButton botonListarClientesAscendente;
    private javax.swing.JButton botonListarCuentasDescendentes;
    private javax.swing.JButton botonRealizarRetiroColones;
    private javax.swing.JButton botonRealizarRetiroDolares;
    private javax.swing.JButton botonRealizarTransferencia;
    private javax.swing.JButton botonRetiroColones;
    private javax.swing.JButton botonRetiroDolares;
    private javax.swing.JButton botonSalir;
    private javax.swing.JFrame cambiarPin;
    private javax.swing.JLabel carlosMenu;
    private javax.swing.JComboBox<String> comboBoxAnios;
    private javax.swing.JComboBox<String> comboBoxDias;
    private javax.swing.JComboBox<String> comboBoxMeses;
    private javax.swing.JFrame consultarEstadoCuentaColones;
    private javax.swing.JFrame consultarEstadoCuentaDolares;
    private javax.swing.JFrame consultarEstatusCuenta;
    private javax.swing.JFrame consultarGananciasBancoCuenta;
    private javax.swing.JButton consultarSaldoActualColones;
    private javax.swing.JButton consultarSaldoActualDolares;
    private javax.swing.JFrame consultarSaldoDolares;
    private javax.swing.JFrame consultarSaldoEnColones;
    private javax.swing.JFrame crearCuenta;
    private javax.swing.JLabel crearCuentaEtiqueta;
    private javax.swing.JFrame depositoColones;
    private javax.swing.JFrame depositoDolares;
    private javax.swing.JLabel etiquetaAnios;
    private javax.swing.JLabel etiquetaCorreoElectronico;
    private javax.swing.JLabel etiquetaCuentaDestino;
    private javax.swing.JLabel etiquetaDia;
    private javax.swing.JLabel etiquetaFechaNacimiento;
    private javax.swing.JLabel etiquetaIdentificacion;
    private javax.swing.JLabel etiquetaIdentificacionCliente;
    private javax.swing.JLabel etiquetaMes;
    private javax.swing.JLabel etiquetaMontoDeposito;
    private javax.swing.JLabel etiquetaMontoDepositoDolares;
    private javax.swing.JLabel etiquetaNombre;
    private javax.swing.JLabel etiquetaNuevoPin1;
    private javax.swing.JLabel etiquetaNumeroCuenta1;
    private javax.swing.JLabel etiquetaNumeroCuentaCambiarPin1;
    private javax.swing.JLabel etiquetaNumeroCuentaConsultarColones;
    private javax.swing.JLabel etiquetaNumeroCuentaConsultarSaldoDolares;
    private javax.swing.JLabel etiquetaNumeroCuentaDepositoDolares;
    private javax.swing.JLabel etiquetaNumeroCuentaEstadoCuenta;
    private javax.swing.JLabel etiquetaNumeroCuentaEstadoCuentaDolares;
    private javax.swing.JLabel etiquetaNumeroCuentaEstatus;
    private javax.swing.JLabel etiquetaNumeroCuentaGanancia;
    private javax.swing.JLabel etiquetaNumeroCuentaOrigen;
    private javax.swing.JLabel etiquetaNumeroCuentaRetiro;
    private javax.swing.JLabel etiquetaNumeroCuentaRetiroDolar;
    private javax.swing.JLabel etiquetaNumeroTelefono;
    private javax.swing.JLabel etiquetaNumeroTelefono1;
    private javax.swing.JLabel etiquetaPalabra;
    private javax.swing.JLabel etiquetaPalabraColones;
    private javax.swing.JLabel etiquetaPalabraDolares;
    private javax.swing.JLabel etiquetaPinActual1;
    private javax.swing.JLabel etiquetaPinActualConsultarColones;
    private javax.swing.JLabel etiquetaPinActualDolares;
    private javax.swing.JLabel etiquetaPinActualEstadoCuentaColones;
    private javax.swing.JLabel etiquetaPinActualEstadoCuentaDolares;
    private javax.swing.JLabel etiquetaPinCliente;
    private javax.swing.JLabel etiquetaPinColones;
    private javax.swing.JLabel etiquetaPinColonesDolar;
    private javax.swing.JLabel etiquetaPinOrigen;
    private javax.swing.JLabel etiquetaPrimerApellido;
    private javax.swing.JLabel etiquetaSaldo;
    private javax.swing.JLabel etiquetaSaldoRetiroColones;
    private javax.swing.JLabel etiquetaSaldoRetiroColones1;
    private javax.swing.JLabel etiquetaSegundoApellido;
    private javax.swing.JTextField identificacionClienteBuscar;
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JTextArea listaClientesAscendente;
    private javax.swing.JFrame listarClientesAscendentes;
    private javax.swing.JFrame listarCuentasDescendentes;
    private javax.swing.JTextArea listarCuentasDescendentesTexto;
    private javax.swing.JTextField numeroCuentaBuscarCuenta;
    private javax.swing.JTextField numeroCuentaCambiarPin;
    private javax.swing.JTextField numeroCuentaConsultaColones;
    private javax.swing.JTextField numeroCuentaConsultaDolares;
    private javax.swing.JTextField numeroCuentaDestino;
    private javax.swing.JTextField numeroCuentaEstadoCuentaColones;
    private javax.swing.JTextField numeroCuentaEstadoCuentaDolares;
    private javax.swing.JTextField numeroCuentaEstatus;
    private javax.swing.JTextField numeroCuentaGanancia;
    private javax.swing.JTextField numeroCuentaOrigen;
    private javax.swing.JTextField numeroPinEstadoCuentaColones;
    private javax.swing.JTextField numeroPinEstadoCuentaDolares;
    private javax.swing.JTextField palabraTransferencia;
    private javax.swing.JButton palabraTransferenciaBoton;
    private javax.swing.JTextField pinOrigen;
    private javax.swing.JButton realizarTransferenciaBoton;
    private javax.swing.JButton registrarClienteBoton;
    private javax.swing.JFrame registrarClientes;
    private javax.swing.JButton registrarCuenta;
    private javax.swing.JFrame retiroColones;
    private javax.swing.JLabel retiroColonesEtiqueta;
    private javax.swing.JLabel retiroColonesEtiqueta1;
    private javax.swing.JFrame retiroDolares;
    private javax.swing.JTextField saldoTransferencia;
    private javax.swing.JSeparator separadorMenu;
    private javax.swing.JSeparator separadorMenu1;
    private javax.swing.JSeparator separadorMenu10;
    private javax.swing.JSeparator separadorMenu11;
    private javax.swing.JSeparator separadorMenu2;
    private javax.swing.JSeparator separadorMenu3;
    private javax.swing.JSeparator separadorMenu4;
    private javax.swing.JSeparator separadorMenu5;
    private javax.swing.JSeparator separadorMenu6;
    private javax.swing.JSeparator separadorMenu7;
    private javax.swing.JSeparator separadorMenu8;
    private javax.swing.JSeparator separadorMenu9;
    private javax.swing.JLabel subtituloMenu1;
    private javax.swing.JTextField textoCorreoElectronico;
    private javax.swing.JTextField textoIdentificacion;
    private javax.swing.JTextField textoIdentificacionCrearCuenta;
    private javax.swing.JTextField textoMontoDepositar;
    private javax.swing.JTextField textoMontoDepositarDolares;
    private javax.swing.JTextField textoNombre;
    private javax.swing.JTextField textoNuevoPin;
    private javax.swing.JTextField textoNumeroCuentaDeposito;
    private javax.swing.JTextField textoNumeroCuentaDepositoDolares;
    private javax.swing.JTextField textoNumeroCuentaRetiro;
    private javax.swing.JTextField textoNumeroCuentaRetiroDolar;
    private javax.swing.JTextField textoNumeroTelefono;
    private javax.swing.JTextField textoPalabraColones;
    private javax.swing.JTextField textoPalabraDolares;
    private javax.swing.JTextField textoPin;
    private javax.swing.JTextField textoPinActual;
    private javax.swing.JTextField textoPinActualColones;
    private javax.swing.JTextField textoPinActualDolares;
    private javax.swing.JTextField textoPinColonesRetiro;
    private javax.swing.JTextField textoPinColonesRetiroDolar;
    private javax.swing.JTextField textoPrimerApellido;
    private javax.swing.JTextField textoSaldoInicial;
    private javax.swing.JTextField textoSaldoRetiro;
    private javax.swing.JTextField textoSaldoRetiroDolares;
    private javax.swing.JTextField textoSegundoApellido;
    private javax.swing.JLabel tituloCambiarPin1;
    private javax.swing.JLabel tituloClientesAscendentes1;
    private javax.swing.JLabel tituloConsultarEstadoCuenta;
    private javax.swing.JLabel tituloConsultarEstadoCuentaDolares;
    private javax.swing.JLabel tituloConsultarEstatus;
    private javax.swing.JLabel tituloConsultarGanancias;
    private javax.swing.JLabel tituloConsultarSaldoColones;
    private javax.swing.JLabel tituloConsultarSaldoDolares;
    private javax.swing.JLabel tituloCuentasDescendentes;
    private javax.swing.JLabel tituloDepositoColones;
    private javax.swing.JLabel tituloDepositoDolares;
    private javax.swing.JLabel tituloInformacionSoloCliente;
    private javax.swing.JLabel tituloInformacionSoloCuenta;
    private javax.swing.JLabel tituloMenu;
    private javax.swing.JLabel tituloRegistrarClientes;
    private javax.swing.JLabel transferenciaEtiqueta;
    private javax.swing.JFrame transferenciaLocal;
    private javax.swing.JLabel valeMenu;
    private javax.swing.JLabel victorMenu;
    // End of variables declaration//GEN-END:variables
}
